{"version":3,"file":"static/chunks/132-aea3ca068428c1fa.js","mappings":"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","sources":["webpack://_N_E/./src/webgl/artwork-alastair/Utils/EventEmitter.js","webpack://_N_E/./src/webgl/artwork-alastair/Utils/Sizes.js","webpack://_N_E/./src/webgl/artwork-alastair/Utils/Time.js","webpack://_N_E/./src/webgl/artwork-alastair/Camera.js","webpack://_N_E/./src/webgl/artwork-alastair/Renderer.js","webpack://_N_E/./src/webgl/artwork-alastair/World/shaders/postprocessing/vertex.glsl.js","webpack://_N_E/./src/webgl/artwork-alastair/World/shaders/postprocessing/fragment.glsl.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Environment.js","webpack://_N_E/./src/webgl/artwork-alastair/World/LoadingScreen.js","webpack://_N_E/./src/webgl/artwork-alastair/World/shaders/loading/vertex.glsl.js","webpack://_N_E/./src/webgl/artwork-alastair/World/shaders/loading/fragment.glsl.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Background.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Floor.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Beads.js","webpack://_N_E/./src/webgl/artwork-alastair/World/World.js","webpack://_N_E/./src/webgl/artwork-alastair/Utils/Resources.js","webpack://_N_E/./src/webgl/artwork-alastair/Utils/Debug.js","webpack://_N_E/./src/webgl/artwork-alastair/sources.js","webpack://_N_E/./src/webgl/artwork-alastair/Experience.js","webpack://_N_E/./src/pages/artwork-alastair/artwork.js"],"sourcesContent":["//===== Author: Bruno Simon =====\n//===== Course: Threejs Journey =====\n\nexport default class EventEmitter {\n  constructor() {\n    this.callbacks = {};\n    this.callbacks.base = {};\n  }\n\n  on(_names, callback) {\n    // Errors\n    if (typeof _names === 'undefined' || _names === '') {\n      console.warn('wrong names');\n      return false;\n    }\n\n    if (typeof callback === 'undefined') {\n      console.warn('wrong callback');\n      return false;\n    }\n\n    // Resolve names\n    const names = this.resolveNames(_names);\n\n    // Each name\n    names.forEach((_name) => {\n      // Resolve name\n      const name = this.resolveName(_name);\n\n      // Create namespace if not exist\n      if (!(this.callbacks[name.namespace] instanceof Object)) this.callbacks[name.namespace] = {};\n\n      // Create callback if not exist\n      if (!(this.callbacks[name.namespace][name.value] instanceof Array))\n        this.callbacks[name.namespace][name.value] = [];\n\n      // Add callback\n      this.callbacks[name.namespace][name.value].push(callback);\n    });\n\n    return this;\n  }\n\n  off(_names) {\n    // Errors\n    if (typeof _names === 'undefined' || _names === '') {\n      console.warn('wrong name');\n      return false;\n    }\n\n    // Resolve names\n    const names = this.resolveNames(_names);\n\n    // Each name\n    names.forEach((_name) => {\n      // Resolve name\n      const name = this.resolveName(_name);\n\n      // Remove namespace\n      if (name.namespace !== 'base' && name.value === '') {\n        delete this.callbacks[name.namespace];\n      }\n\n      // Remove specific callback in namespace\n      else {\n        // Default\n        if (name.namespace === 'base') {\n          // Try to remove from each namespace\n          for (const namespace in this.callbacks) {\n            if (this.callbacks[namespace] instanceof Object && this.callbacks[namespace][name.value] instanceof Array) {\n              delete this.callbacks[namespace][name.value];\n\n              // Remove namespace if empty\n              if (Object.keys(this.callbacks[namespace]).length === 0) delete this.callbacks[namespace];\n            }\n          }\n        }\n\n        // Specified namespace\n        else if (\n          this.callbacks[name.namespace] instanceof Object &&\n          this.callbacks[name.namespace][name.value] instanceof Array\n        ) {\n          delete this.callbacks[name.namespace][name.value];\n\n          // Remove namespace if empty\n          if (Object.keys(this.callbacks[name.namespace]).length === 0) delete this.callbacks[name.namespace];\n        }\n      }\n    });\n\n    return this;\n  }\n\n  trigger(_name, _args) {\n    // Errors\n    if (typeof _name === 'undefined' || _name === '') {\n      console.warn('wrong name');\n      return false;\n    }\n\n    let finalResult = null;\n    let result = null;\n\n    // Default args\n    const args = !(_args instanceof Array) ? [] : _args;\n\n    // Resolve names (should on have one event)\n    let name = this.resolveNames(_name);\n\n    // Resolve name\n    name = this.resolveName(name[0]);\n\n    // Default namespace\n    if (name.namespace === 'base') {\n      // Try to find callback in each namespace\n      for (const namespace in this.callbacks) {\n        if (this.callbacks[namespace] instanceof Object && this.callbacks[namespace][name.value] instanceof Array) {\n          // eslint-disable-next-line no-loop-func\n          this.callbacks[namespace][name.value].forEach(function (callback) {\n            result = callback.apply(this, args);\n\n            if (typeof finalResult === 'undefined') {\n              finalResult = result;\n            }\n          });\n        }\n      }\n    }\n\n    // Specified namespace\n    else if (this.callbacks[name.namespace] instanceof Object) {\n      if (name.value === '') {\n        console.warn('wrong name');\n        return this;\n      }\n\n      this.callbacks[name.namespace][name.value].forEach(function (callback) {\n        result = callback.apply(this, args);\n\n        if (typeof finalResult === 'undefined') finalResult = result;\n      });\n    }\n\n    return finalResult;\n  }\n\n  resolveNames(_names) {\n    let names = _names;\n    names = names.replace(/[^a-zA-Z0-9 ,/.]/g, '');\n    names = names.replace(/[,/]+/g, ' ');\n    names = names.split(' ');\n\n    return names;\n  }\n\n  resolveName(name) {\n    const newName = {};\n    const parts = name.split('.');\n\n    newName.original = name;\n    newName.value = parts[0];\n    newName.namespace = 'base'; // Base namespace\n\n    // Specified namespace\n    if (parts.length > 1 && parts[1] !== '') {\n      newName.namespace = parts[1];\n    }\n\n    return newName;\n  }\n}\n","import EventEmitter from './EventEmitter';\n\nexport default class Sizes extends EventEmitter {\n  constructor() {\n    super();\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.pixelRatio = Math.min(window.devicePixelRatio, 2);\n\n    window.addEventListener('resize', () => {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      this.pixelRatio = Math.min(window.devicePixelRatio, 2);\n\n      this.trigger('resize');\n    });\n  }\n}\n","import EventEmitter from './EventEmitter';\n\nexport default class Time extends EventEmitter {\n  constructor() {\n    super();\n\n    this.start = Date.now();\n    this.current = this.start;\n    this.elapsed = 0;\n    this.delta = 16;\n\n    window.requestAnimationFrame(() => {\n      this.tick();\n    });\n  }\n\n  tick() {\n    const currentTime = Date.now();\n    this.delta = currentTime - this.current;\n    this.current = currentTime;\n    this.elapsed = this.current - this.start;\n\n    this.trigger('tick');\n\n    window.requestAnimationFrame(() => {\n      this.tick();\n    });\n  }\n}\n","import { PerspectiveCamera, Vector3 } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport data from './data.json';\n\nimport Experience from './Experience';\n\nexport default class Camera {\n  constructor() {\n    this.experience = new Experience();\n    this.sizes = this.experience.sizes;\n    this.scene = this.experience.scene;\n    this.canvas = this.experience.canvas;\n\n    this.setInstance();\n    this.setOrbitControls();\n    this.setEventListeners();\n  }\n\n  setInstance() {\n    this.instance = new PerspectiveCamera(35, this.sizes.width / this.sizes.height, 0.1, 10000);\n    this.instance.position.set(10, 2, 16);\n    this.scene.add(this.instance);\n  }\n\n  setOrbitControls() {\n    this.controls = new OrbitControls(this.instance, this.canvas);\n    this.controls.target = new Vector3(0, 5, 0);\n    this.controls.enableDamping = true;\n    this.controls.enablePan = false;\n    this.controls.screenSpacePanning = false;\n    this.controls.maxPolarAngle = Math.PI / 1.8;\n    this.controls.minDistance = 10;\n    this.controls.maxDistance = 22;\n    this.controls.autoRotate = true;\n    this.controls.autoRotateSpeed = 2.0;\n  }\n\n  resize() {\n    this.instance.aspect = this.sizes.width / this.sizes.height;\n    this.instance.updateProjectionMatrix();\n  }\n\n  setEventListeners() {\n    this.rotateToggleButton = document.getElementById('rotate-toggle');\n\n    this.rotateToggleButton.addEventListener('click', () => {\n      this.controls.autoRotate = !this.controls.autoRotate;\n      this.rotateToggleButton.style.background = this.controls.autoRotate\n        ? data.colors.activeButton\n        : data.colors.inactiveButton;\n      this.rotateToggleButton.style.color = this.controls.autoRotate\n        ? data.colors.activeText\n        : data.colors.inactiveText;\n      this.rotateToggleButton.innerHTML = this.controls.autoRotate\n        ? data.buttons.autoRotateOn\n        : data.buttons.autoRotateOff;\n    });\n  }\n\n  update() {\n    this.controls.update();\n  }\n}\n","import { WebGLRenderer, sRGBEncoding, CineonToneMapping, PCFSoftShadowMap, ShaderMaterial, Vector2 } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\n\nimport Experience from './Experience';\n\nimport vertexShader from './World/shaders/postprocessing/vertex.glsl.js';\nimport fragmentShader from './World/shaders/postprocessing/fragment.glsl.js';\n\nexport default class Renderer {\n  constructor() {\n    this.experience = new Experience();\n    this.canvas = this.experience.canvas;\n    this.sizes = this.experience.sizes;\n    this.scene = this.experience.scene;\n    this.camera = this.experience.camera;\n\n    this.setInstance();\n    this.setPostProcessing();\n  }\n\n  setInstance() {\n    this.instance = new WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true\n    });\n\n    this.instance.physicallyCorrectLights = true;\n    this.instance.outputEncoding = sRGBEncoding;\n    this.instance.toneMapping = CineonToneMapping;\n    this.instance.toneMappingExposure = 1.75;\n    this.instance.shadowMap.enabled = true;\n    this.instance.shadowMap.type = PCFSoftShadowMap;\n    this.instance.setSize(this.sizes.width, this.sizes.height);\n    this.instance.setPixelRatio(Math.min(this.sizes.pixelRatio, 2));\n  }\n\n  setPostProcessing() {\n    const params = {\n      exposure: 1,\n      bloomStrength: 0.7,\n      bloomThreshold: 1,\n      bloomRadius: 3\n    };\n\n    this.renderScene = new RenderPass(this.scene, this.camera.instance);\n\n    this.bloomPass = new UnrealBloomPass(new Vector2(this.sizes.width, this.sizes.height), 1.5, 0.4, 0.85);\n    this.bloomPass.threshold = params.bloomThreshold;\n    this.bloomPass.strength = params.bloomStrength;\n    this.bloomPass.radius = params.bloomRadius;\n\n    this.bloomComposer = new EffectComposer(this.instance);\n    this.bloomComposer.renderToScreen = false;\n    this.bloomComposer.addPass(this.renderScene);\n    this.bloomComposer.addPass(this.bloomPass);\n\n    this.finalPass = new ShaderPass(\n      new ShaderMaterial({\n        uniforms: {\n          baseTexture: { value: null },\n          bloomTexture: { value: this.bloomComposer.renderTarget2.texture }\n        },\n        vertexShader,\n        fragmentShader,\n        defines: {}\n      }),\n      'baseTexture'\n    );\n    this.finalPass.needsSwap = true;\n\n    this.finalComposer = new EffectComposer(this.instance);\n    this.finalComposer.addPass(this.renderScene);\n    this.finalComposer.addPass(this.finalPass);\n  }\n\n  resize() {\n    this.instance.setSize(this.sizes.width, this.sizes.height);\n    this.bloomComposer.setSize(this.sizes.width, this.sizes.height);\n    this.finalComposer.setSize(this.sizes.width, this.sizes.height);\n    this.instance.setPixelRatio(Math.min(this.sizes.pixelRatio, 2));\n    this.bloomComposer.setPixelRatio(Math.min(this.sizes.pixelRatio, 2));\n    this.finalComposer.setPixelRatio(Math.min(this.sizes.pixelRatio, 2));\n  }\n\n  update() {\n    this.bloomComposer.render();\n    this.finalComposer.render();\n  }\n}\n","export default `\nvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvUv = uv;\n\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t}\n`;\n","export default `\nuniform sampler2D baseTexture;\n\t\t\tuniform sampler2D bloomTexture;\n\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n\n\t\t\t}\n`;\n","import { SpotLight, Mesh, MeshStandardMaterial, SphereGeometry, Fog } from 'three';\nimport { Lensflare, LensflareElement } from 'three/examples/jsm/objects/Lensflare.js';\n\nimport Experience from '../Experience.js';\n\nimport data from '../data.json';\n\nexport default class Environment {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n    this.debug = this.experience.debug;\n\n    this.fogColor = data.colors.fogColor;\n\n    this.scene.fog = new Fog(this.fogColor, 10, 40);\n\n    this.setSpotLight(7, 10, 0);\n    this.setStudioModel();\n    this.setEnvironmentMap();\n  }\n\n  setSpotLight(x, y, z) {\n    this.spotLight = new SpotLight(0xffee88);\n    const bulbGeometry = new SphereGeometry(0.15, 16, 8);\n    const bulbMat = new MeshStandardMaterial({\n      emissive: 0xffffff,\n      emissiveIntensity: 1,\n      color: 0x000000\n    });\n    this.spotLight.add(new Mesh(bulbGeometry, bulbMat));\n    this.spotLight.position.set(x, y, z);\n    this.spotLight.distance = 40;\n    this.spotLight.decay = 1.5;\n    this.spotLight.angle = Math.PI / 4;\n    this.spotLight.penumbra = 0.5;\n    this.spotLight.intensity = 150;\n    this.setLensflare();\n    this.scene.add(this.spotLight);\n  }\n\n  setStudioModel() {\n    this.studioModel = this.resources.items.studioLights.children.filter((obj) => obj.name === 'spot_light')[0];\n\n    this.studioModel.scale.set(0.145, 0.145, 0.145);\n    this.studioModel.position.set(8, 7.4, 0);\n    this.studioModel.rotation.set(0, -Math.PI * 0.5, 0);\n\n    this.scene.add(this.studioModel);\n  }\n\n  setLensflare() {\n    const lensflare = new Lensflare();\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare0, 700, 0, this.spotLight.color));\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare1, 60, 0.6));\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare1, 70, 0.7));\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare1, 120, 0.9));\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare1, 70, 1));\n    this.spotLight.add(lensflare);\n  }\n\n  setEnvironmentMap() {\n    this.environmentMap = {};\n    this.environmentMap.intensity = 0.4;\n    this.environmentMap.texture = this.resources.items.environmentMapTexture;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials = () => {\n      this.scene.traverse((child) => {\n        if (child instanceof Mesh && child.material instanceof MeshStandardMaterial) {\n          child.material.envMap = this.environmentMap.texture;\n          child.material.envMapIntensity = this.environmentMap.intensity;\n          child.material.needsUpdate = true;\n        }\n      });\n    };\n\n    this.environmentMap.updateMaterials();\n  }\n}\n","import { PlaneGeometry, ShaderMaterial, Mesh } from 'three';\n\nimport { gsap } from 'gsap';\n\nimport Experience from '../Experience.js';\n\nimport vertexShader from './shaders/loading/vertex.glsl.js';\nimport fragmentShader from './shaders/loading/fragment.glsl.js';\n\nexport default class LoadingScreen {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n\n    this.setGeometry();\n    this.setTextures();\n    this.setMaterial();\n    this.setMesh();\n\n    this.resources.on('ready', () => {\n      gsap.to(this.material.uniforms.uAlpha, { duration: 3, value: 0 });\n    });\n  }\n\n  setGeometry() {\n    this.geometry = new PlaneGeometry(2, 2, 1, 1);\n  }\n  setTextures() {\n    this.textures = {\n      uniforms: {\n        uAlpha: { value: 1 }\n      },\n      vertexShader,\n      fragmentShader\n    };\n  }\n\n  setMaterial() {\n    this.material = new ShaderMaterial({ ...this.textures, transparent: true });\n  }\n  setMesh() {\n    this.mesh = new Mesh(this.geometry, this.material);\n    this.scene.add(this.mesh);\n  }\n}\n","export default `\nvoid main()\n{\n    gl_Position = vec4(position, 1.0);\n}\n`;\n","export default `\n        uniform float uAlpha;\n\n        void main()\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, uAlpha);\n        }\n`;\n","import { SphereGeometry, Mesh, MeshBasicMaterial, BackSide } from 'three';\n\nimport Experience from '../Experience.js';\n\nimport data from '../data.json';\n\nexport default class Background {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n    this.data = data;\n\n    this.setGeometry();\n    this.setTextures();\n    this.setMaterial();\n    this.setMesh();\n  }\n\n  setGeometry() {\n    this.geometry = new SphereGeometry(...this.data.sizes.background);\n  }\n  setTextures() {\n    this.textures = {};\n    this.textures.color = this.data.colors.background;\n  }\n  setMaterial() {\n    this.material = new MeshBasicMaterial({\n      ...this.textures,\n      side: BackSide\n    });\n  }\n  setMesh() {\n    this.mesh = new Mesh(this.geometry, this.material);\n    this.scene.add(this.mesh);\n  }\n}\n","import { CircleGeometry, sRGBEncoding, RepeatWrapping, Mesh, MeshStandardMaterial } from 'three';\n\nimport Experience from '../Experience.js';\n\nexport default class Floor {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n    this.physics = this.experience.physics;\n\n    this.setGeometry();\n    this.setTextures();\n    this.setMaterial();\n    this.setMesh();\n  }\n\n  setGeometry() {\n    this.geometry = new CircleGeometry(32, 64);\n  }\n  setTextures() {\n    this.textures = {};\n\n    this.textures.map = this.resources.items.cliffAlbedo;\n    this.textures.map.encoding = sRGBEncoding;\n    this.textures.map.repeat.set(1.5, 1.5);\n    this.textures.map.wrapS = RepeatWrapping;\n    this.textures.map.wrapT = RepeatWrapping;\n\n    this.textures.displacementMap = this.resources.items.cliffDisplacement;\n    this.textures.displacementMap.repeat.set(1.5, 1.5);\n    this.textures.displacementMap.wrapS = RepeatWrapping;\n    this.textures.displacementMap.wrapT = RepeatWrapping;\n\n    this.textures.normalMap = this.resources.items.cliffNormal;\n    this.textures.normalMap.repeat.set(1.5, 1.5);\n    this.textures.normalMap.wrapS = RepeatWrapping;\n    this.textures.normalMap.wrapT = RepeatWrapping;\n\n    this.textures.roughnessMap = this.resources.items.cliffRoughness;\n    this.textures.roughnessMap.repeat.set(1.5, 1.5);\n    this.textures.roughnessMap.wrapS = RepeatWrapping;\n    this.textures.roughnessMap.wrapT = RepeatWrapping;\n  }\n  setMaterial() {\n    this.material = new MeshStandardMaterial({\n      ...this.textures\n    });\n  }\n  setMesh() {\n    this.mesh = new Mesh(this.geometry, this.material);\n    this.mesh.rotation.x = -Math.PI * 0.5;\n    this.mesh.receiveShadow = true;\n    this.scene.add(this.mesh);\n  }\n}\n","import {\n  BoxGeometry,\n  TetrahedronGeometry,\n  SphereGeometry,\n  InstancedMesh,\n  MeshStandardMaterial,\n  DynamicDrawUsage,\n  Matrix4,\n  Color,\n  BufferAttribute,\n  LoadingManager\n} from 'three';\n\nimport Experience from '../Experience.js';\n\nimport data from '../data.json';\n\nexport default class Beads {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n    this.canvas = this.experience.canvas;\n    this.camera = this.experience.camera;\n    this.time = this.experience.time;\n    this.debug = this.experience.debug;\n    this.objects = [];\n    this.vertices = [];\n    this.matrix = new Matrix4();\n    this.color = new Color();\n    this.index = 0;\n    this.animateLoad = true;\n    this.multiColored = true;\n    this.beadType = data.beadType.sphere;\n\n    this.debug.active && (this.debugFolder = this.debug.ui.addFolder('beads'));\n\n    this.setMaterial();\n    this.#setMeshDebugger();\n    this.object = this.resources.items.handModel;\n    this.createMesh(this.object);\n    this.setEventListeners();\n  }\n\n  setGeometry(beadScale, beadType) {\n    let geometry;\n\n    if (beadType === data.beadType.box) {\n      geometry = new BoxGeometry(beadScale, beadScale, beadScale);\n    } else if (beadType === data.beadType.tetrahedron) {\n      geometry = new TetrahedronGeometry(beadScale);\n    } else {\n      geometry = new SphereGeometry(beadScale, 10, 10);\n    }\n\n    return geometry;\n  }\n\n  setMaterial() {\n    this.material = new MeshStandardMaterial({\n      precision: 'lowp',\n      metalness: 1.0,\n      roughness: 0.0,\n      color: '#ffffff'\n    });\n  }\n\n  #combineBuffer(model, bufferName) {\n    let count = 0;\n\n    model.traverse(function (child) {\n      if (child.isMesh) {\n        const buffer = child.geometry.attributes[bufferName];\n\n        count += buffer.array.length;\n      }\n    });\n\n    const combined = new Float32Array(count);\n\n    let offset = 0;\n\n    model.traverse(function (child) {\n      if (child.isMesh) {\n        const buffer = child.geometry.attributes[bufferName];\n\n        combined.set(buffer.array, offset);\n        offset += buffer.array.length;\n      }\n    });\n\n    return new BufferAttribute(combined, 3);\n  }\n\n  createMesh(model) {\n    const positions = this.#combineBuffer(model, 'position');\n\n    const matrix = new Matrix4();\n    const color = new Color();\n\n    // ===== VERTICES =====\n    let lowestVertexY = 0;\n    let highestVertexY = 0;\n    let vertices = [];\n    for (let i = 0; i < positions.array.length; i += 3) {\n      vertices.push([positions.array[i], positions.array[i + 1], positions.array[i + 2]]);\n    }\n\n    const reduceVertices = (array) => {\n      return array.length < 10000 ? array : reduceVertices(array.filter((element, i) => i % 2 === 0));\n    };\n\n    vertices = reduceVertices(vertices);\n\n    for (let i = 0; i < vertices.length; i++) {\n      if (i !== 0 && vertices[i][1] < lowestVertexY) {\n        lowestVertexY = vertices[i][1];\n      }\n\n      if (i !== 0 && vertices[i][1] > highestVertexY) {\n        highestVertexY = vertices[i][1];\n      }\n    }\n\n    //===== MODEL SIZE CALCULATION =====\n    const vertexDifference = highestVertexY - lowestVertexY;\n    const scale = 6 / vertexDifference;\n    const beadScale = 0.01 * vertexDifference;\n    const positionY = scale * (vertexDifference / 2);\n    const lowestStart = -vertexDifference;\n    //=====\n\n    const geometry = this.setGeometry(beadScale, this.beadType);\n\n    this.mesh = new InstancedMesh(geometry, this.material, vertices.length);\n    this.mesh.instanceMatrix.setUsage(DynamicDrawUsage);\n\n    for (let i = 0; i < vertices.length; i++) {\n      this.animateLoad\n        ? this.mesh.setMatrixAt(i, matrix.setPosition(vertices[i][0], lowestStart, vertices[i][2]))\n        : this.mesh.setMatrixAt(i, matrix.setPosition(...vertices[i]));\n\n      this.multiColored\n        ? this.mesh.setColorAt(i, color.setHex(0xffffff * Math.random()))\n        : this.mesh.setColorAt(i, color.setHex(0xffffff));\n    }\n\n    this.vertices = vertices;\n\n    this.mesh.scale.set(scale, scale, scale);\n    this.mesh.position.set(0, positionY, 0);\n    this.scene.add(this.mesh);\n    this.objects.push(this.mesh);\n  }\n\n  #setMeshDebugger() {\n    //===== DEBUG =====\n    if (this.debug.active) {\n      const debugObject = {\n        Hand: () => {\n          this.resetMesh();\n          this.createMesh(this.resources.items.handModel);\n        },\n        SkullModel: () => {\n          this.resetMesh();\n          this.createMesh(this.resources.items.skullModel);\n        },\n        Remove: () => this.resetMesh()\n      };\n\n      this.debugFolder.add(debugObject, 'Hand');\n      this.debugFolder.add(debugObject, 'SkullModel');\n      this.debugFolder.add(debugObject, 'Remove');\n    }\n  }\n\n  resetMesh() {\n    for (const object of this.objects) {\n      this.scene.remove(object);\n    }\n    this.objects = [];\n\n    this.mesh = null;\n    this.index = 0;\n  }\n\n  #meshEvent() {\n    this.createMesh(this.object);\n    this.#handleMeshEvent();\n  }\n\n  #handleMeshEvent() {\n    this.createMeshButton.style.background = data.colors.inactiveButton;\n    this.resetMeshButton.style.background = data.colors.activeButton;\n\n    this.createMeshButton.removeEventListener('click', this.meshEventHandler);\n    this.resetMeshButton.addEventListener('click', this.resetMeshEventHandler);\n  }\n\n  #animateEvent() {\n    this.animateLoad = !this.animateLoad;\n    this.animateButton.style.background = this.animateLoad ? data.colors.activeButton : data.colors.inactiveButton;\n    this.animateButton.style.color = this.animateLoad ? data.colors.activeText : data.colors.inactiveText;\n    this.animateButton.innerHTML = this.animateLoad ? data.buttons.animateOn : data.buttons.animateOff;\n    this.#handleMeshEvent();\n    this.resetMesh();\n    this.createMesh(this.object);\n  }\n\n  #resetMeshEvent() {\n    this.resetMesh();\n    this.animateLoad = false;\n\n    this.resetMeshButton.removeEventListener('click', this.resetMeshEventHandler);\n    this.createMeshButton.addEventListener('click', this.meshEventHandler);\n\n    this.resetMeshButton.style.background = data.colors.inactiveButton;\n    this.createMeshButton.style.background = data.colors.activeButton;\n  }\n\n  #changeColorEvent() {\n    this.multiColored = !this.multiColored;\n    this.colorButton.style.background = this.multiColored ? data.colors.activeButton : data.colors.inactiveButton;\n    this.colorButton.style.color = this.multiColored ? data.colors.activeText : data.colors.inactiveText;\n    this.colorButton.innerHTML = this.multiColored ? data.buttons.colorTypeOn : data.buttons.colorTypeOff;\n    this.#handleMeshEvent();\n    this.resetMesh();\n    this.createMesh(this.object);\n  }\n\n  #beadTypeEvent(e) {\n    const selectedIndex = e.target.selectedIndex;\n    const beadType = e.target[selectedIndex].value;\n    this.beadType = beadType;\n    this.#handleMeshEvent();\n    this.resetMesh();\n    this.createMesh(this.object);\n  }\n\n  setEventListeners() {\n    document.addEventListener(\n      'dragover',\n      (e) => {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'copy';\n      },\n      false\n    );\n\n    document.addEventListener(\n      'drop',\n      (e) => {\n        e.preventDefault();\n\n        if (e.dataTransfer.types[0] === 'text/plain') return;\n\n        e.dataTransfer.files && this.loadFiles(e.dataTransfer.files);\n      },\n      false\n    );\n\n    this.meshEventHandler = this.#meshEvent.bind(this);\n    this.animateHandler = this.#animateEvent.bind(this);\n    this.resetMeshEventHandler = this.#resetMeshEvent.bind(this);\n    this.colorEventHandler = this.#changeColorEvent.bind(this);\n    this.beadTypeHandler = this.#beadTypeEvent.bind(this);\n\n    this.createMeshButton = document.getElementById('create-mesh');\n    this.animateButton = document.getElementById('animate');\n    this.resetMeshButton = document.getElementById('reset-mesh');\n    this.beadTypeButton = document.getElementById('bead-type');\n    this.colorButton = document.getElementById('color-type');\n    this.fileUploadButton = document.getElementById('file-upload');\n\n    this.animateButton.addEventListener('click', this.animateHandler);\n    this.resetMeshButton.addEventListener('click', this.resetMeshEventHandler);\n    this.colorButton.addEventListener('click', this.colorEventHandler);\n    this.beadTypeButton.addEventListener('change', this.beadTypeHandler);\n    this.fileUploadButton.addEventListener('change', (e) => e.target.files && this.loadFiles(e.target.files));\n  }\n\n  //===== LOADING CUSTOM ASSET =====\n\n  loadFiles(files) {\n    function createFilesMap(files) {\n      let map = {};\n\n      for (let i = 0; i < files.length; i++) {\n        let file = files[i];\n        map[file.name] = file;\n      }\n\n      return map;\n    }\n\n    if (files.length > 0) {\n      let filesMap = createFilesMap(files);\n\n      this.manager = new LoadingManager();\n      this.manager.setURLModifier(function (url) {\n        url = url.replace(/^(\\.?\\/)/, ''); // remove './'\n\n        let file = filesMap[url];\n\n        if (file) {\n          return URL.createObjectURL(file);\n        }\n\n        return url;\n      });\n\n      for (let i = 0; i < files.length; i++) {\n        this.loadFile(files[i], this.manager);\n      }\n    }\n  }\n\n  loadFile(file, manager) {\n    const scope = this;\n    const filename = file.name;\n    const extension = filename.split('.').pop().toLowerCase();\n\n    const reader = new FileReader();\n\n    switch (extension) {\n      case 'fbx':\n        reader.addEventListener(\n          'load',\n          async function (event) {\n            let contents = event.target.result;\n\n            let { FBXLoader } = await import('three/examples/jsm/loaders/FBXLoader.js');\n\n            let loader = new FBXLoader(manager);\n            let object = loader.parse(contents);\n            this.object = object;\n\n            scope.resetMesh();\n            scope.createMesh(object);\n            scope.#handleMeshEvent();\n          },\n          false\n        );\n        reader.readAsArrayBuffer(file);\n\n        break;\n\n      case 'obj':\n        reader.addEventListener(\n          'load',\n          async (event) => {\n            let contents = event.target.result;\n\n            let { OBJLoader } = await import('three/examples/jsm/loaders/OBJLoader.js');\n\n            let object = new OBJLoader().parse(contents);\n            object.name = filename;\n            this.object = object;\n\n            scope.resetMesh();\n            scope.createMesh(object);\n            scope.#handleMeshEvent();\n          },\n          false\n        );\n        reader.readAsText(file);\n\n        break;\n\n      default:\n        console.error('Unsupported file format (' + extension + ').');\n\n        break;\n    }\n  }\n\n  update() {\n    //===== BEADS ANIMATION =====\n    const matrix = new Matrix4();\n    if (this.animateLoad && this.mesh && this.index < this.vertices.length) {\n      this.mesh.setMatrixAt(this.index, matrix.setPosition(...this.vertices[this.index]));\n      this.mesh.instanceMatrix.needsUpdate = true;\n\n      this.index++;\n    }\n  }\n}\n","import Experience from '../Experience';\nimport Environment from './Environment.js';\nimport LoadingScreen from './LoadingScreen.js';\nimport Background from './Background.js';\nimport Floor from './Floor.js';\nimport Beads from './Beads.js';\n\nexport default class World {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.loadingScreen = new LoadingScreen();\n    this.resources = this.experience.resources;\n\n    this.loadingBarElement = document.getElementById('loading-bar');\n    this.controlsContainer = document.getElementById('controls-container');\n    this.hideControls = document.getElementById('hide-controls');\n\n    // Styling\n    this.loadingBarElement.style.position = 'absolute';\n    this.loadingBarElement.style.top = '50%';\n    this.loadingBarElement.style.width = '100%';\n    this.loadingBarElement.style.height = '2px';\n    this.loadingBarElement.style.background = '#ffffff';\n    this.loadingBarElement.style.transformOrigin = 'top left';\n    this.loadingBarElement.style.transform = 'scaleX(0)';\n\n    this.resources.manager.onLoad = () => {\n      this.controlsContainer.style.opacity = 1;\n      this.hideControls.style.opacity = 1;\n      this.loadingBarElement.style.transform = 'scaleX(0)';\n      this.loadingBarElement.style.transformOrigin = `100% 0`;\n\n      this.background = new Background();\n      this.floor = new Floor();\n      this.beads = new Beads();\n      this.environment = new Environment();\n    };\n\n    this.resources.manager.onProgress = (url, itemsLoaded, itemsTotal) => {\n      const progressRatio = itemsLoaded / itemsTotal;\n      this.loadingBarElement.style.transform = `scaleX(${progressRatio})`;\n    };\n  }\n\n  update() {\n    this.beads && this.beads.update();\n  }\n}\n","import { TextureLoader, CubeTextureLoader, LoadingManager } from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\n\nimport EventEmitter from './EventEmitter';\n\nexport default class Resources extends EventEmitter {\n  constructor(sources) {\n    super();\n\n    this.sources = sources;\n    this.items = {};\n    this.toLoad = this.sources.length;\n    this.loaded = 0;\n\n    this.manager = new LoadingManager();\n    this.setLoaders();\n    this.startLoading();\n  }\n\n  setLoaders() {\n    this.loaders = {};\n    this.loaders.objLoader = new OBJLoader(this.manager);\n    this.loaders.fbxLoader = new FBXLoader(this.manager);\n    this.loaders.textureLoader = new TextureLoader(this.manager);\n    this.loaders.cubeTextureLoader = new CubeTextureLoader(this.manager);\n  }\n\n  startLoading() {\n    for (const source of this.sources) {\n      if (source.type === 'objModel') {\n        this.loaders.objLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      } else if (source.type === 'fbxModel') {\n        this.loaders.fbxLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      } else if (source.type === 'texture') {\n        this.loaders.textureLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      } else if (source.type === 'cubeTexture') {\n        this.loaders.cubeTextureLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      }\n    }\n  }\n\n  sourceLoaded(source, file) {\n    this.items[source.name] = file;\n    this.loaded++;\n\n    if (this.loaded === this.toLoad) {\n      this.trigger('ready');\n    }\n  }\n}\n","import GUI from 'lil-gui';\n\nexport default class Debug {\n  constructor() {\n    this.active = window.location.hash === '#debug';\n\n    if (this.active) {\n      this.ui = new GUI();\n    }\n  }\n}\n","import { baseUrl } from '../../data/settings';\n\nconst path_start = `${baseUrl}/assets/static-alastair/`;\n\nexport default [\n  //===== TEXTURES =====\n  {\n    name: 'cliffAlbedo',\n    type: 'texture',\n    path: `${path_start}textures/cliff/cliff_Albedo.jpg`\n  },\n  {\n    name: 'cliffDisplacement',\n    type: 'texture',\n    path: `${path_start}textures/cliff/cliff_Displacement.jpg`\n  },\n  {\n    name: 'cliffNormal',\n    type: 'texture',\n    path: `${path_start}textures/cliff/cliff_Normal.jpg`\n  },\n  {\n    name: 'cliffRoughness',\n    type: 'texture',\n    path: `${path_start}textures/cliff/cliff_Roughness.jpg`\n  },\n  {\n    name: 'lensflare0_Alpha',\n    type: 'texture',\n    path: `${path_start}textures/lensflare/lensflare0_alpha.png`\n  },\n  {\n    name: 'lensflare0',\n    type: 'texture',\n    path: `${path_start}textures/lensflare/lensflare0.png`\n  },\n  {\n    name: 'lensflare1',\n    type: 'texture',\n    path: `${path_start}textures/lensflare/lensflare1.png`\n  },\n  //===== MODELS =====\n  {\n    name: 'handModel',\n    type: 'objModel',\n    path: `${path_start}models/hand/hand.obj`\n  },\n  {\n    name: 'studioLights',\n    type: 'fbxModel',\n    path: `${path_start}models/studio_lights.fbx`\n  },\n  //===== TEST MODELS =====\n  {\n    name: 'skullModel',\n    type: 'objModel',\n    path: `${path_start}models/skull.obj`\n  },\n  //===== ENVIRONMENT MAPS =====\n  {\n    name: 'environmentMapTexture',\n    type: 'cubeTexture',\n    path: [\n      `${path_start}textures/envMap/0/px.jpg`,\n      `${path_start}textures/envMap/0/nx.jpg`,\n      `${path_start}textures/envMap/0/py.jpg`,\n      `${path_start}textures/envMap/0/ny.jpg`,\n      `${path_start}textures/envMap/0/pz.jpg`,\n      `${path_start}textures/envMap/0/nz.jpg`\n    ]\n  }\n];\n","import { Scene, Mesh } from 'three';\n\nimport Sizes from './Utils/Sizes';\nimport Time from './Utils/Time';\nimport Camera from './Camera.js';\nimport Renderer from './Renderer';\nimport World from './World/World';\nimport Resources from './Utils/Resources';\nimport Debug from './Utils/Debug';\n\nimport sources from './sources.js';\n\nlet instance = null;\n\nexport default class Experience {\n  constructor(_canvas, reset = false) {\n    if (instance && reset === false) {\n      return instance;\n    }\n\n    instance = this;\n\n    document.getElementById('controls-container').style.opacity = 0;\n    document.getElementById('hide-controls').style.opacity = 0;\n\n    this.canvas = _canvas;\n    this.debug = new Debug();\n    this.sizes = new Sizes();\n    this.time = new Time();\n    this.scene = new Scene();\n    this.resources = new Resources(sources);\n    this.camera = new Camera();\n    this.renderer = new Renderer();\n    this.world = new World();\n\n    this.sizes.on('resize', () => {\n      this.resize();\n    });\n\n    this.time.on('tick', () => {\n      this.update();\n    });\n  }\n\n  resize() {\n    this.camera.resize();\n    this.renderer.resize();\n  }\n\n  update() {\n    this.camera.update();\n    this.world.update();\n    this.renderer.update();\n  }\n\n  destroy() {\n    this.sizes.off('resize');\n    this.time.off('tick');\n\n    this.scene.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.geometry.dispose();\n\n        for (const key in child.material) {\n          const value = child.material[key];\n          if (value && typeof value.dispose === 'function') {\n            value.dispose();\n          }\n        }\n      }\n    });\n\n    this.camera.controls.dispose();\n    this.renderer.instance.dispose();\n\n    if (this.debug.active) {\n      this.debug.ui.destroy();\n    }\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nimport Experience from '../../webgl/artwork-alastair/Experience';\n\nfunction Art() {\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    const experience = new Experience(inputEl.current, true);\n\n    return () => {\n      experience.destroy();\n    };\n  }, []);\n\n  return <canvas ref={inputEl}></canvas>;\n}\n\nexport default Art;\n"],"names":["EventEmitter","this","callbacks","base","on","_names","callback","console","warn","resolveNames","forEach","_name","name","resolveName","namespace","Object","value","Array","push","off","keys","length","trigger","_args","finalResult","result","args","apply","names","replace","split","newName","parts","original","Sizes","width","window","innerWidth","height","innerHeight","pixelRatio","Math","min","devicePixelRatio","addEventListener","Time","start","Date","now","current","elapsed","delta","requestAnimationFrame","tick","currentTime","Camera","experience","Experience","sizes","scene","canvas","setInstance","setOrbitControls","setEventListeners","instance","PerspectiveCamera","position","set","add","controls","OrbitControls","target","Vector3","enableDamping","enablePan","screenSpacePanning","maxPolarAngle","PI","minDistance","maxDistance","autoRotate","autoRotateSpeed","resize","aspect","updateProjectionMatrix","rotateToggleButton","document","getElementById","style","background","data","colors","activeButton","inactiveButton","color","activeText","inactiveText","innerHTML","buttons","autoRotateOn","autoRotateOff","update","Renderer","camera","setPostProcessing","WebGLRenderer","antialias","physicallyCorrectLights","outputEncoding","sRGBEncoding","toneMapping","CineonToneMapping","toneMappingExposure","shadowMap","enabled","type","PCFSoftShadowMap","setSize","setPixelRatio","params","renderScene","RenderPass","bloomPass","UnrealBloomPass","Vector2","threshold","strength","radius","bloomComposer","EffectComposer","renderToScreen","addPass","finalPass","ShaderPass","ShaderMaterial","uniforms","baseTexture","bloomTexture","renderTarget2","texture","vertexShader","fragmentShader","defines","needsSwap","finalComposer","render","Environment","resources","debug","fogColor","fog","Fog","setSpotLight","setStudioModel","setEnvironmentMap","x","y","z","spotLight","SpotLight","bulbGeometry","SphereGeometry","bulbMat","MeshStandardMaterial","emissive","emissiveIntensity","Mesh","distance","decay","angle","penumbra","intensity","setLensflare","studioModel","items","studioLights","children","filter","obj","scale","rotation","lensflare","Lensflare","addElement","LensflareElement","lensflare0","lensflare1","environmentMap","environmentMapTexture","environment","updateMaterials","traverse","child","material","envMap","envMapIntensity","needsUpdate","LoadingScreen","setGeometry","setTextures","setMaterial","setMesh","gsap","uAlpha","duration","geometry","PlaneGeometry","textures","transparent","mesh","Background","MeshBasicMaterial","side","BackSide","Floor","physics","CircleGeometry","map","cliffAlbedo","encoding","repeat","wrapS","RepeatWrapping","wrapT","displacementMap","cliffDisplacement","normalMap","cliffNormal","roughnessMap","cliffRoughness","receiveShadow","Beads","time","objects","vertices","matrix","Matrix4","Color","index","animateLoad","multiColored","beadType","sphere","active","debugFolder","ui","addFolder","setMeshDebugger","object","handModel","createMesh","beadScale","box","BoxGeometry","tetrahedron","TetrahedronGeometry","precision","metalness","roughness","model","positions","combineBuffer","lowestVertexY","highestVertexY","i","array","reduceVertices","element","vertexDifference","positionY","lowestStart","InstancedMesh","instanceMatrix","setUsage","DynamicDrawUsage","setMatrixAt","setPosition","setColorAt","setHex","random","resetMesh","remove","e","preventDefault","dataTransfer","dropEffect","types","files","loadFiles","meshEventHandler","meshEvent","bind","animateHandler","animateEvent","resetMeshEventHandler","resetMeshEvent","colorEventHandler","changeColorEvent","beadTypeHandler","beadTypeEvent","createMeshButton","animateButton","resetMeshButton","beadTypeButton","colorButton","fileUploadButton","filesMap","file","createFilesMap","manager","LoadingManager","setURLModifier","url","URL","createObjectURL","loadFile","scope","filename","extension","pop","toLowerCase","reader","FileReader","event","contents","FBXLoader","loader","import","parse","handleMeshEvent","readAsArrayBuffer","OBJLoader","readAsText","error","bufferName","count","isMesh","buffer","attributes","combined","Float32Array","offset","BufferAttribute","debugObject","Hand","SkullModel","skullModel","Remove","removeEventListener","animateOn","animateOff","colorTypeOn","colorTypeOff","selectedIndex","World","loadingScreen","loadingBarElement","controlsContainer","hideControls","top","transformOrigin","transform","onLoad","opacity","floor","beads","onProgress","itemsLoaded","itemsTotal","progressRatio","Resources","sources","toLoad","loaded","setLoaders","startLoading","loaders","objLoader","fbxLoader","textureLoader","TextureLoader","cubeTextureLoader","CubeTextureLoader","source","load","path","sourceLoaded","Debug","location","hash","GUI","path_start","baseUrl","_canvas","reset","Scene","renderer","world","destroy","key","dispose","inputEl","useRef","useEffect","ref"],"sourceRoot":""}