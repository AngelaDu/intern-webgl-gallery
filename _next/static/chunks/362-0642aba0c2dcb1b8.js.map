{"version":3,"file":"static/chunks/362-0642aba0c2dcb1b8.js","mappings":"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","sources":["webpack://_N_E/./src/webgl/artwork-alastair/Utils/EventEmitter.js","webpack://_N_E/./src/webgl/artwork-alastair/Utils/Sizes.js","webpack://_N_E/./src/webgl/artwork-alastair/Utils/Time.js","webpack://_N_E/./src/webgl/artwork-alastair/Camera.js","webpack://_N_E/./src/webgl/artwork-alastair/Renderer.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Environment.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Background.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Floor.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Beads.js","webpack://_N_E/./src/webgl/artwork-alastair/World/shaders/beads/vertex.glsl.js","webpack://_N_E/./src/webgl/artwork-alastair/World/shaders/beads/fragment.glsl.js","webpack://_N_E/./src/webgl/artwork-alastair/World/Waves.js","webpack://_N_E/./src/webgl/artwork-alastair/World/shaders/waves/vertex.glsl.js","webpack://_N_E/./src/webgl/artwork-alastair/World/shaders/waves/fragment.glsl.js","webpack://_N_E/./src/webgl/artwork-alastair/World/World.js","webpack://_N_E/./src/webgl/artwork-alastair/Utils/Resources.js","webpack://_N_E/./src/webgl/artwork-alastair/Utils/Debug.js","webpack://_N_E/./src/webgl/artwork-alastair/sources.js","webpack://_N_E/./src/webgl/artwork-alastair/Experience.js","webpack://_N_E/./src/pages/artwork-alastair/artwork.js"],"sourcesContent":["//===== Author: Bruno Simon =====\n//===== Course: Threejs Journey =====\n\nexport default class EventEmitter {\n  constructor() {\n    this.callbacks = {};\n    this.callbacks.base = {};\n  }\n\n  on(_names, callback) {\n    // Errors\n    if (typeof _names === 'undefined' || _names === '') {\n      console.warn('wrong names');\n      return false;\n    }\n\n    if (typeof callback === 'undefined') {\n      console.warn('wrong callback');\n      return false;\n    }\n\n    // Resolve names\n    const names = this.resolveNames(_names);\n\n    // Each name\n    names.forEach((_name) => {\n      // Resolve name\n      const name = this.resolveName(_name);\n\n      // Create namespace if not exist\n      if (!(this.callbacks[name.namespace] instanceof Object)) this.callbacks[name.namespace] = {};\n\n      // Create callback if not exist\n      if (!(this.callbacks[name.namespace][name.value] instanceof Array))\n        this.callbacks[name.namespace][name.value] = [];\n\n      // Add callback\n      this.callbacks[name.namespace][name.value].push(callback);\n    });\n\n    return this;\n  }\n\n  off(_names) {\n    // Errors\n    if (typeof _names === 'undefined' || _names === '') {\n      console.warn('wrong name');\n      return false;\n    }\n\n    // Resolve names\n    const names = this.resolveNames(_names);\n\n    // Each name\n    names.forEach((_name) => {\n      // Resolve name\n      const name = this.resolveName(_name);\n\n      // Remove namespace\n      if (name.namespace !== 'base' && name.value === '') {\n        delete this.callbacks[name.namespace];\n      }\n\n      // Remove specific callback in namespace\n      else {\n        // Default\n        if (name.namespace === 'base') {\n          // Try to remove from each namespace\n          for (const namespace in this.callbacks) {\n            if (this.callbacks[namespace] instanceof Object && this.callbacks[namespace][name.value] instanceof Array) {\n              delete this.callbacks[namespace][name.value];\n\n              // Remove namespace if empty\n              if (Object.keys(this.callbacks[namespace]).length === 0) delete this.callbacks[namespace];\n            }\n          }\n        }\n\n        // Specified namespace\n        else if (\n          this.callbacks[name.namespace] instanceof Object &&\n          this.callbacks[name.namespace][name.value] instanceof Array\n        ) {\n          delete this.callbacks[name.namespace][name.value];\n\n          // Remove namespace if empty\n          if (Object.keys(this.callbacks[name.namespace]).length === 0) delete this.callbacks[name.namespace];\n        }\n      }\n    });\n\n    return this;\n  }\n\n  trigger(_name, _args) {\n    // Errors\n    if (typeof _name === 'undefined' || _name === '') {\n      console.warn('wrong name');\n      return false;\n    }\n\n    let finalResult = null;\n    let result = null;\n\n    // Default args\n    const args = !(_args instanceof Array) ? [] : _args;\n\n    // Resolve names (should on have one event)\n    let name = this.resolveNames(_name);\n\n    // Resolve name\n    name = this.resolveName(name[0]);\n\n    // Default namespace\n    if (name.namespace === 'base') {\n      // Try to find callback in each namespace\n      for (const namespace in this.callbacks) {\n        if (this.callbacks[namespace] instanceof Object && this.callbacks[namespace][name.value] instanceof Array) {\n          // eslint-disable-next-line no-loop-func\n          this.callbacks[namespace][name.value].forEach(function (callback) {\n            result = callback.apply(this, args);\n\n            if (typeof finalResult === 'undefined') {\n              finalResult = result;\n            }\n          });\n        }\n      }\n    }\n\n    // Specified namespace\n    else if (this.callbacks[name.namespace] instanceof Object) {\n      if (name.value === '') {\n        console.warn('wrong name');\n        return this;\n      }\n\n      this.callbacks[name.namespace][name.value].forEach(function (callback) {\n        result = callback.apply(this, args);\n\n        if (typeof finalResult === 'undefined') finalResult = result;\n      });\n    }\n\n    return finalResult;\n  }\n\n  resolveNames(_names) {\n    let names = _names;\n    names = names.replace(/[^a-zA-Z0-9 ,/.]/g, '');\n    names = names.replace(/[,/]+/g, ' ');\n    names = names.split(' ');\n\n    return names;\n  }\n\n  resolveName(name) {\n    const newName = {};\n    const parts = name.split('.');\n\n    newName.original = name;\n    newName.value = parts[0];\n    newName.namespace = 'base'; // Base namespace\n\n    // Specified namespace\n    if (parts.length > 1 && parts[1] !== '') {\n      newName.namespace = parts[1];\n    }\n\n    return newName;\n  }\n}\n","import EventEmitter from './EventEmitter';\n\nexport default class Sizes extends EventEmitter {\n  constructor() {\n    super();\n\n    // Setup\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.pixelRatio = Math.min(window.devicePixelRatio, 2);\n\n    //Resize event\n    window.addEventListener('resize', () => {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      this.pixelRatio = Math.min(window.devicePixelRatio, 2);\n\n      this.trigger('resize');\n    });\n  }\n}\n","import EventEmitter from './EventEmitter';\n\nexport default class Time extends EventEmitter {\n  constructor() {\n    super();\n\n    // Setup\n\n    this.start = Date.now();\n    this.current = this.start;\n    this.elapsed = 0;\n    this.delta = 16;\n\n    window.requestAnimationFrame(() => {\n      this.tick();\n    });\n  }\n\n  tick() {\n    const currentTime = Date.now();\n    this.delta = currentTime - this.current;\n    this.current = currentTime;\n    this.elapsed = this.current - this.start;\n\n    this.trigger('tick');\n\n    window.requestAnimationFrame(() => {\n      this.tick();\n    });\n  }\n}\n","import { PerspectiveCamera, Vector3 } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport Experience from './Experience';\n\nexport default class Camera {\n  constructor() {\n    this.experience = new Experience();\n    this.sizes = this.experience.sizes;\n    this.scene = this.experience.scene;\n    this.canvas = this.experience.canvas;\n\n    this.setInstance();\n    this.setOrbitControls();\n\n    window.addEventListener('keydown', (e) => {\n      if (e.code === 'KeyC') {\n        this.controls.enabled = false;\n      }\n    });\n\n    window.addEventListener('keyup', (e) => {\n      if (e.code === 'KeyC') {\n        this.controls.enabled = true;\n      }\n    });\n  }\n\n  setInstance() {\n    this.instance = new PerspectiveCamera(35, this.sizes.width / this.sizes.height, 0.1, 10000);\n    this.instance.position.set(10, 5, 16);\n    this.scene.add(this.instance);\n  }\n\n  setOrbitControls() {\n    this.controls = new OrbitControls(this.instance, this.canvas);\n    this.controls.target = new Vector3(0, 5, 0);\n    this.controls.enableDamping = true;\n  }\n\n  resize() {\n    this.instance.aspect = this.sizes.width / this.sizes.height;\n    this.instance.updateProjectionMatrix();\n  }\n\n  update() {\n    this.controls.autoRotate = true;\n    this.controls.autoRotateSpeed = 2.0;\n    this.controls.update();\n  }\n}\n","import { WebGLRenderer, sRGBEncoding, CineonToneMapping, PCFSoftShadowMap } from 'three';\n\nimport Experience from './Experience';\n\nexport default class Renderer {\n  constructor() {\n    this.experience = new Experience();\n    this.canvas = this.experience.canvas;\n    this.sizes = this.experience.sizes;\n    this.scene = this.experience.scene;\n    this.camera = this.experience.camera;\n\n    this.setInstance();\n  }\n\n  setInstance() {\n    this.instance = new WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true\n    });\n\n    this.instance.physicallyCorrectLights = true;\n    this.instance.outputEncoding = sRGBEncoding;\n    this.instance.toneMapping = CineonToneMapping;\n    this.instance.toneMappingExposure = 1.75;\n    this.instance.shadowMap.enabled = true;\n    this.instance.shadowMap.type = PCFSoftShadowMap;\n    this.instance.setSize(this.sizes.width, this.sizes.height);\n    this.instance.setPixelRatio(Math.min(this.sizes.pixelRatio, 2));\n  }\n\n  resize() {\n    this.instance.setSize(this.sizes.width, this.sizes.height);\n    this.instance.setPixelRatio(Math.min(this.sizes.pixelRatio, 2));\n  }\n\n  update() {\n    this.instance.render(this.scene, this.camera.instance);\n  }\n}\n","import { PointLight, Mesh, MeshStandardMaterial, SphereGeometry, Fog } from 'three';\nimport { Lensflare, LensflareElement } from 'three/examples/jsm/objects/Lensflare.js';\n\nimport Experience from '../Experience.js';\n\nexport default class Environment {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n    this.debug = this.experience.debug;\n\n    this.debug.active && (this.debugFolder = this.debug.ui.addFolder('environment'));\n\n    this.fogColor = '#8789c0';\n\n    this.scene.fog = new Fog(this.fogColor, 10, 40);\n\n    this.setPointLight(7, 10, 0);\n    this.setStudioModel();\n    this.setEnvironmentMap();\n  }\n\n  setPointLight(x, y, z) {\n    this.pointLight = new PointLight(0xffee88, 1, 100, 2);\n    const bulbGeometry = new SphereGeometry(0.15, 16, 8);\n    const bulbMat = new MeshStandardMaterial({\n      emissive: 0xffffee,\n      emissiveIntensity: 1,\n      color: 0x000000\n    });\n    this.pointLight.add(new Mesh(bulbGeometry, bulbMat));\n    this.pointLight.position.set(x, y, z);\n    this.pointLight.intensity = 250;\n    this.pointLight.castShadow = true;\n    this.setLensflare();\n    this.scene.add(this.pointLight);\n  }\n\n  setStudioModel() {\n    this.studioModel = this.resources.items.studioLights.children.filter((obj) => obj.name === 'spot_light')[0];\n\n    this.studioModel.scale.set(0.145, 0.145, 0.145);\n    this.studioModel.position.set(8, 7.4, 0);\n    this.studioModel.rotation.set(0, -Math.PI * 0.5, 0);\n\n    this.scene.add(this.studioModel);\n  }\n\n  setLensflare() {\n    const lensflare = new Lensflare();\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare0, 700, 0, this.pointLight.color));\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare1, 60, 0.6));\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare1, 70, 0.7));\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare1, 120, 0.9));\n    lensflare.addElement(new LensflareElement(this.resources.items.lensflare1, 70, 1));\n    this.pointLight.add(lensflare);\n  }\n\n  setEnvironmentMap() {\n    this.environmentMap = {};\n    this.environmentMap.intensity = 0.4;\n    this.environmentMap.texture = this.resources.items.environmentMapTexture;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials = () => {\n      this.scene.traverse((child) => {\n        if (child instanceof Mesh && child.material instanceof MeshStandardMaterial) {\n          child.material.envMap = this.environmentMap.texture;\n          child.material.envMapIntensity = this.environmentMap.intensity;\n          child.material.needsUpdate = true;\n        }\n      });\n    };\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debug.active) {\n      this.debugFolder.add(this.pointLight, 'intensity').name('sunLightIntensity').min(0).max(300).step(1);\n      this.debugFolder.add(this.pointLight.position, 'x').name('pointLightX').min(-5).max(5).step(0.001);\n      this.debugFolder.add(this.pointLight.position, 'y').name('pointLightY').min(-5).max(5).step(0.001);\n      this.debugFolder.add(this.pointLight.position, 'z').name('pointLightZ').min(-5).max(5).step(0.001);\n    }\n  }\n}\n","import { SphereGeometry, Mesh, MeshBasicMaterial, BackSide } from 'three';\n\nimport Experience from '../Experience.js';\n\nexport default class Background {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n\n    this.setGeometry();\n    this.setTextures();\n    this.setMaterial();\n    this.setMesh();\n  }\n\n  setGeometry() {\n    this.geometry = new SphereGeometry(30, 32, 32);\n  }\n  setTextures() {\n    this.textures = {};\n    this.textures.color = '#ffcb47';\n  }\n  setMaterial() {\n    this.material = new MeshBasicMaterial({\n      ...this.textures,\n      side: BackSide\n    });\n  }\n  setMesh() {\n    this.mesh = new Mesh(this.geometry, this.material);\n    this.scene.add(this.mesh);\n  }\n}\n","import {\n  CircleGeometry,\n  // BoxGeometry,\n  sRGBEncoding,\n  RepeatWrapping,\n  Mesh,\n  MeshStandardMaterial\n} from 'three';\n\nimport Experience from '../Experience.js';\n\nexport default class Floor {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n    this.physics = this.experience.physics;\n\n    this.setGeometry();\n    this.setTextures();\n    this.setMaterial();\n    this.setMesh();\n  }\n\n  setGeometry() {\n    this.geometry = new CircleGeometry(32, 64);\n    // this.boxGeometry = new BoxGeometry(32, 0.1, 32);\n  }\n  setTextures() {\n    this.textures = {};\n\n    this.textures.map = this.resources.items.cliffAlbedo;\n    this.textures.map.encoding = sRGBEncoding;\n    this.textures.map.repeat.set(1.5, 1.5);\n    this.textures.map.wrapS = RepeatWrapping;\n    this.textures.map.wrapT = RepeatWrapping;\n\n    this.textures.displacementMap = this.resources.items.cliffDisplacement;\n    this.textures.displacementMap.repeat.set(1.5, 1.5);\n    this.textures.displacementMap.wrapS = RepeatWrapping;\n    this.textures.displacementMap.wrapT = RepeatWrapping;\n\n    this.textures.normalMap = this.resources.items.cliffNormal;\n    this.textures.normalMap.repeat.set(1.5, 1.5);\n    this.textures.normalMap.wrapS = RepeatWrapping;\n    this.textures.normalMap.wrapT = RepeatWrapping;\n\n    this.textures.roughnessMap = this.resources.items.cliffRoughness;\n    this.textures.roughnessMap.repeat.set(1.5, 1.5);\n    this.textures.roughnessMap.wrapS = RepeatWrapping;\n    this.textures.roughnessMap.wrapT = RepeatWrapping;\n  }\n  setMaterial() {\n    this.material = new MeshStandardMaterial({\n      ...this.textures\n    });\n  }\n  setMesh() {\n    // this.box = new Mesh(this.boxGeometry);\n    // this.box.position.y = 0.5;\n    // this.scene.add(this.box);\n    // this.physics.addMesh(this.box);\n\n    this.mesh = new Mesh(this.geometry, this.material);\n    this.mesh.rotation.x = -Math.PI * 0.5;\n    this.mesh.receiveShadow = true;\n    this.scene.add(this.mesh);\n  }\n}\n","import {\n  PlaneGeometry,\n  BoxGeometry,\n  SphereGeometry,\n  ShaderMaterial,\n  InstancedMesh,\n  Mesh,\n  MeshStandardMaterial,\n  DynamicDrawUsage,\n  Vector2,\n  Matrix4,\n  Color,\n  BufferAttribute\n  // Raycaster\n} from 'three';\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\n\nimport Experience from '../Experience.js';\n\nimport beadVertexShader from './shaders/beads/vertex.glsl.js';\nimport beadFragmentShader from './shaders/beads/fragment.glsl.js';\n\nexport default class Beads {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n    this.canvas = this.experience.canvas;\n    this.camera = this.experience.camera;\n    this.time = this.experience.time;\n    this.debug = this.experience.debug;\n    this.objects = [];\n    this.physics = this.experience.physics;\n    this.vertices = [];\n    this.matrix = new Matrix4();\n    this.color = new Color();\n    // this.raycaster = new Raycaster();\n    this.mouse = new Vector2(1, 1);\n    this.index = 0;\n\n    this.debug.active && (this.debugFolder = this.debug.ui.addFolder('beads'));\n\n    this.setGeometry();\n    this.setMaterial();\n    this.#setMesh();\n    this.createMesh(this.resources.items.handModel, 0.9, 0.1);\n\n    //===== EVENT LISTENERS =====\n\n    // Desktop\n    this.setDragControls();\n    window.addEventListener('keydown', (e) => {\n      if (e.code === 'KeyC') {\n        this.dragControls.activate();\n      }\n\n      if (e.code === 'KeyB') {\n        this.createMesh(this.resources.items.handModel, 0.9, 0.1);\n      }\n\n      if (e.code === 'KeyR') {\n        this.resetMesh();\n      }\n    });\n\n    window.addEventListener('keyup', (e) => {\n      if (e.code === 'KeyC') {\n        this.dragControls.deactivate();\n      }\n    });\n\n    this.buttonColor = '#eac435';\n    this.buttonColorInactive = '#000000';\n    this.meshEventHandler = this.#meshEvent.bind(this);\n    this.createMeshButton = document.getElementById('create-mesh');\n\n    this.resetMeshEventHandler = this.#resetMeshEvent.bind(this);\n    this.resetMeshButton = document.getElementById('reset-mesh');\n\n    this.resetMeshButton.addEventListener('click', this.resetMeshEventHandler);\n\n    // document.addEventListener('mousemove', (event) => {\n    //   this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n    //   this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    // });\n  }\n\n  setGeometry() {\n    this.boxGeometry = new BoxGeometry(1, 1, 1, 12, 12, 12);\n    this.planeGeometry = new PlaneGeometry(2, 2, 25, 25);\n    this.sphereGeometry = new SphereGeometry(1, 32, 32);\n  }\n\n  setMaterial() {\n    this.shaderMaterial = new ShaderMaterial({\n      uniforms: {\n        color: { value: new Color(0xffffff) },\n        pointTexture: { value: this.resources.items.beadParticle }\n      },\n      vertexShader: beadVertexShader,\n      fragmentShader: beadFragmentShader,\n      transparent: true\n    });\n\n    this.material = new MeshStandardMaterial({\n      color: 0x804d71,\n      metalness: 1.0,\n      roughness: 0.0\n    });\n  }\n\n  createSphere() {\n    const mesh = new Mesh(this.sphereGeometry, this.material);\n    mesh.position.y = 5;\n    mesh.castShadow = true;\n    this.scene.add(mesh);\n    this.objects.push(mesh);\n    // this.physics.addMesh(mesh, 1);\n  }\n\n  #combineBuffer(model, bufferName) {\n    let count = 0;\n\n    model.traverse(function (child) {\n      if (child.isMesh) {\n        const buffer = child.geometry.attributes[bufferName];\n\n        count += buffer.array.length;\n      }\n    });\n\n    const combined = new Float32Array(count);\n\n    let offset = 0;\n\n    model.traverse(function (child) {\n      if (child.isMesh) {\n        const buffer = child.geometry.attributes[bufferName];\n\n        combined.set(buffer.array, offset);\n        offset += buffer.array.length;\n      }\n    });\n\n    return new BufferAttribute(combined, 3);\n  }\n\n  createMesh(model, scale = 0.15, beadScale = 0.5, beadType = 'sphere') {\n    const positions = this.#combineBuffer(model, 'position');\n\n    // ===== VERTICES =====\n    const vertices = [];\n    for (let i = 0; i < positions.array.length; i += 3) {\n      vertices.push([positions.array[i], positions.array[i + 1], positions.array[i + 2]]);\n    }\n\n    // Sort the vertices array\n\n    // vertices =\n    // ----\n\n    // Size check\n    if (vertices.length > 10000) {\n      console.log('Model has too many vertices (> 10000)', vertices.length);\n      return;\n    }\n\n    let geometry;\n\n    if (beadType === 'box') {\n      geometry = new BoxGeometry(beadScale, beadScale, beadScale);\n    } else {\n      geometry = new SphereGeometry(beadScale, 10, 10);\n    }\n\n    this.mesh = new InstancedMesh(geometry, this.material, vertices.length);\n    this.mesh.instanceMatrix.setUsage(DynamicDrawUsage);\n\n    const matrix = new Matrix4();\n    const color = new Color();\n    let lowestVertexY = 0;\n    let highestVertexY = 0;\n\n    for (let i = 0; i < vertices.length; i++) {\n      this.mesh.setMatrixAt(i, matrix.setPosition(vertices[i][0], 0, vertices[i][2]));\n      if (i !== 0 && vertices[i][1] < lowestVertexY) {\n        lowestVertexY = vertices[i][1];\n      }\n\n      if (i !== 0 && vertices[i][1] > highestVertexY) {\n        highestVertexY = vertices[i][1];\n      }\n      this.mesh.setColorAt(i, color.setHex(0xffffff * Math.random()));\n    }\n\n    const vertexDifference = highestVertexY - lowestVertexY;\n    const positionY = scale * (vertexDifference / 2) - 1;\n    // this.physics.addMesh(this.mesh, 1);\n\n    console.log({ vertices: vertices.length });\n    this.vertices = vertices;\n\n    this.mesh.scale.set(scale, scale, scale);\n    this.mesh.position.set(0, positionY, 0);\n    this.mesh.castShadow = true;\n    this.scene.add(this.mesh);\n    this.objects.push(this.mesh);\n  }\n\n  #setMesh() {\n    //===== DEBUG =====\n    if (this.debug.active) {\n      const debugObject = {\n        Sphere: () => {\n          this.createSphere();\n        },\n        Mandalorian: () => {\n          this.createMesh(this.resources.items.mandalorianModel);\n        },\n        CoffeeMug: () => {\n          this.createMesh(this.resources.items.coffeeMugModel);\n        },\n        CustomMesh: () => {\n          this.createMesh(this.resources.items.handModel, 1, 0.1, 'box');\n        },\n        Reset: () => {\n          this.resetMesh();\n        }\n      };\n      this.debugFolder.add(debugObject, 'Sphere');\n      this.debugFolder.add(debugObject, 'Mandalorian');\n      this.debugFolder.add(debugObject, 'CoffeeMug');\n      this.debugFolder.add(debugObject, 'CustomMesh');\n      this.debugFolder.add(debugObject, 'Reset');\n    }\n  }\n\n  setDragControls() {\n    this.dragControls = new DragControls(this.objects, this.camera.instance, this.canvas);\n    this.dragControls.deactivate();\n  }\n\n  resetMesh() {\n    this.dragControls.dispose();\n    for (const object of this.objects) {\n      this.scene.remove(object);\n    }\n    this.objects = [];\n\n    //====\n    // If adding physics, need to handle the reset of Oimo objects\n    //====\n\n    this.setDragControls();\n    this.mesh = null;\n    this.index = 0;\n  }\n\n  #meshEvent() {\n    this.createMesh(this.resources.items.handModel, 0.9, 0.1);\n\n    this.createMeshButton.style.background = this.buttonColorInactive;\n    this.createMeshButton.removeEventListener('click', this.meshEventHandler);\n\n    this.resetMeshButton.style.background = this.buttonColor;\n    this.resetMeshButton.addEventListener('click', this.resetMeshEventHandler);\n  }\n\n  #resetMeshEvent() {\n    this.resetMesh();\n\n    this.resetMeshButton.removeEventListener('click', this.resetMeshEventHandler);\n    this.resetMeshButton.style.background = this.buttonColorInactive;\n\n    this.createMeshButton.style.background = this.buttonColor;\n    this.createMeshButton.addEventListener('click', this.meshEventHandler);\n  }\n\n  update() {\n    const matrix = new Matrix4();\n    //===== RAYCASTER ANIMATION =====\n    // this.raycaster.setFromCamera(this.mouse, this.camera.instance);\n    // const intersection = this.raycaster.intersectObject(this.mesh);\n\n    // if (intersection.length > 0) {\n    //   const instanceId = intersection[0].instanceId;\n    //   const position = intersection[0].point;\n\n    //   this.mesh.setMatrixAt(instanceId, matrix.setPosition(position.x, (position.y -= 0.05), position.z));\n    //   this.mesh.instanceMatrix.needsUpdate = true;\n\n    //   // this.mesh.setColorAt(instanceId, new Color().setHex(Math.random() * 0xffffff));\n    // }\n\n    //===== BEADS ANIMATION =====\n    if (this.mesh && this.index < this.vertices.length) {\n      this.mesh.setMatrixAt(this.index, matrix.setPosition(...this.vertices[this.index]));\n      this.mesh.instanceMatrix.needsUpdate = true;\n\n      this.index++;\n    }\n  }\n}\n","export default `\nattribute float size;\n\t\t\tattribute vec3 ca;\n\n\t\t\tvarying vec3 vColor;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvColor = ca;\n\n\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t\tgl_PointSize = size * ( 300.0 / -mvPosition.z );\n\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t}\n`;\n","export default `\nuniform vec3 color;\n\t\t\tuniform sampler2D pointTexture;\n\n\t\t\tvarying vec3 vColor;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec4 color = vec4( color * vColor, 1.0 ) * texture2D( pointTexture, gl_PointCoord );\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n`;\n","import { PlaneGeometry, BoxGeometry, SphereGeometry, Mesh, ShaderMaterial, Vector2, Color } from 'three';\n\nimport Experience from '../Experience.js';\n\nimport beadVertexShader from './shaders/waves/vertex.glsl.js';\nimport beadFragmentShader from './shaders/waves/fragment.glsl.js';\n\nexport default class Beads {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n    this.canvas = this.experience.canvas;\n    this.camera = this.experience.camera;\n    this.time = this.experience.time;\n    this.debug = this.experience.debug;\n    this.objects = [];\n\n    this.debug.active && (this.debugFolder = this.debug.ui.addFolder('draggable waves'));\n\n    this.setGeometry();\n    this.setMaterial();\n    this.setMesh();\n  }\n\n  setGeometry() {\n    this.boxGeometry = new BoxGeometry(1, 1, 1, 12, 12, 12);\n    this.planeGeometry = new PlaneGeometry(2, 2, 256, 256);\n    this.sphereGeometry = new SphereGeometry(1, 32, 32);\n  }\n\n  setMaterial() {\n    this.material = new ShaderMaterial({\n      vertexShader: beadVertexShader,\n      fragmentShader: beadFragmentShader,\n      uniforms: {\n        uTime: { value: 0 },\n\n        uBigWavesElevation: { value: 0.1 },\n        uBigWavesFrequency: { value: new Vector2(1, 1) },\n        uBigWavesSpeed: { value: 0.75 },\n\n        uSmallWavesElevation: { value: 0.15 },\n        uSmallWavesFrequency: { value: 3 },\n        uSmallWavesSpeed: { value: 0.2 },\n        uSmallWavesIterations: { value: 4 },\n\n        uDepthColor: { value: new Color('#C02156') },\n        uSurfaceColor: { value: new Color('#35FF69') },\n        uColorOffset: { value: 0.08 },\n        uColorMultiplier: { value: 5 }\n      }\n      // wireframe: true\n    });\n  }\n\n  //===== Objects =====\n  createBox() {\n    const mesh = new Mesh(this.boxGeometry, this.material);\n    mesh.position.y = 0.6;\n    mesh.castShadow = true;\n    this.scene.add(mesh);\n    this.objects.push(mesh);\n  }\n\n  createPlane() {\n    const mesh = new Mesh(this.planeGeometry, this.material);\n    mesh.rotation.x = -Math.PI * 0.5;\n    mesh.position.y = 0.6;\n    mesh.castShadow = true;\n    this.scene.add(mesh);\n    this.objects.push(mesh);\n  }\n\n  createSphere() {\n    const mesh = new Mesh(this.sphereGeometry, this.material);\n    mesh.position.y = 0.6;\n    mesh.castShadow = true;\n    this.scene.add(mesh);\n    this.objects.push(mesh);\n  }\n\n  setMesh() {\n    //===== DEBUG =====\n    if (this.debug.active) {\n      const debugObject = {\n        Box: () => {\n          this.createBox();\n        },\n        Plane: () => {\n          this.createPlane();\n        },\n        Sphere: () => {\n          this.createSphere();\n        },\n        Reset: () => {\n          for (const object of this.objects) {\n            this.scene.remove(object);\n          }\n          this.objects = [];\n        }\n      };\n      this.debugFolder.add(debugObject, 'Box');\n      this.debugFolder.add(debugObject, 'Plane');\n      this.debugFolder.add(debugObject, 'Sphere');\n      this.debugFolder.add(debugObject, 'Reset');\n    }\n  }\n\n  update() {\n    //===== MATERIAL MOVEMENT =====\n    this.material.uniforms.uTime.value = this.time.elapsed * 0.001;\n  }\n}\n","export default `\nuniform float uTime;\nuniform float uBigWavesElevation;\nuniform vec2 uBigWavesFrequency;\nuniform float uBigWavesSpeed;\n\nuniform float uSmallWavesElevation;\nuniform float uSmallWavesFrequency;\nuniform float uSmallWavesSpeed;\nuniform float uSmallWavesIterations;\n\nvarying float vElevation;\n\n// Classic Perlin 3D Noise \n// by Stefan Gustavson\n//\nvec4 permute(vec4 x) {\n  return mod(((x * 34.0) + 1.0) * x, 289.0);\n}\nvec4 taylorInvSqrt(vec4 r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\nvec3 fade(vec3 t) {\n  return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\n\nfloat cnoise(vec3 P) {\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n  vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n  vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n  vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n  vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n  vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n  vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n  vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nvoid main() {\n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation = sin(modelPosition.x * uBigWavesFrequency.x + uTime * uBigWavesSpeed) * sin(modelPosition.z * uBigWavesFrequency.y + uTime * uBigWavesSpeed) * uBigWavesElevation;\n\n  for(float i = 1.0; i <= uSmallWavesIterations; i++) {\n    elevation -= abs(cnoise(vec3(modelPosition.xz * uSmallWavesFrequency * i, uTime * uSmallWavesSpeed)) * uSmallWavesElevation / i);\n  }\n\n  modelPosition.y += elevation;\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n\n  // Varyings\n  vElevation = elevation;\n}\n`;\n","export default `\nuniform vec3 uDepthColor;\nuniform vec3 uSurfaceColor;\nuniform float uColorOffset;\nuniform float uColorMultiplier;\n\nvarying float vElevation;\n\nvoid main() {\n  float mixStrength = (vElevation + uColorOffset) * uColorMultiplier;\n  vec3 color = mix(uDepthColor, uSurfaceColor, mixStrength);\n  gl_FragColor = vec4(color, 1.0);\n\n}\n`;\n","import Experience from '../Experience';\nimport Environment from './Environment.js';\nimport Background from './Background.js';\nimport Floor from './Floor.js';\nimport Beads from './Beads.js';\nimport Waves from './Waves.js';\n\nexport default class World {\n  constructor() {\n    this.experience = new Experience();\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n\n    this.resources.on('ready', () => {\n      // Setup\n      this.background = new Background();\n      this.floor = new Floor();\n      this.beads = new Beads();\n      this.waves = new Waves();\n      this.environment = new Environment();\n    });\n  }\n\n  update() {\n    this.beads && this.beads.update();\n    this.waves && this.waves.update();\n  }\n}\n","import { TextureLoader, CubeTextureLoader } from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\n\nimport EventEmitter from './EventEmitter';\n\nexport default class Resources extends EventEmitter {\n  constructor(sources) {\n    super();\n\n    // Options\n    this.sources = sources;\n\n    // Setup\n    this.items = {};\n    this.toLoad = this.sources.length;\n    this.loaded = 0;\n\n    this.setLoaders();\n    this.startLoading();\n  }\n\n  setLoaders() {\n    this.loaders = {};\n    this.loaders.gltfLoader = new GLTFLoader();\n    this.loaders.objLoader = new OBJLoader();\n    this.loaders.fbxLoader = new FBXLoader();\n    this.loaders.textureLoader = new TextureLoader();\n    this.loaders.cubeTextureLoader = new CubeTextureLoader();\n  }\n\n  startLoading() {\n    for (const source of this.sources) {\n      if (source.type === 'gltfModel') {\n        this.loaders.gltfLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      } else if (source.type === 'objModel') {\n        this.loaders.objLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      } else if (source.type === 'fbxModel') {\n        this.loaders.fbxLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      } else if (source.type === 'texture') {\n        this.loaders.textureLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      } else if (source.type === 'cubeTexture') {\n        this.loaders.cubeTextureLoader.load(source.path, (file) => {\n          this.sourceLoaded(source, file);\n        });\n      }\n    }\n  }\n\n  sourceLoaded(source, file) {\n    this.items[source.name] = file;\n    this.loaded++;\n\n    if (this.loaded === this.toLoad) {\n      this.trigger('ready');\n    }\n  }\n}\n","import GUI from 'lil-gui';\n\nexport default class Debug {\n  constructor() {\n    this.active = window.location.hash === '#debug';\n\n    if (this.active) {\n      this.ui = new GUI();\n    }\n  }\n}\n","import { baseUrl } from '../../data/settings';\n\nconst path_start = `${baseUrl}/assets/static-alastair/`;\n\nexport default [\n  //===== TEXTURES =====\n  {\n    name: 'cliffAlbedo',\n    type: 'texture',\n    path: `${path_start}textures/cliff/cliff_Albedo.jpg`\n  },\n  {\n    name: 'cliffDisplacement',\n    type: 'texture',\n    path: `${path_start}textures/cliff/cliff_Displacement.jpg`\n  },\n  {\n    name: 'cliffNormal',\n    type: 'texture',\n    path: `${path_start}textures/cliff/cliff_Normal.jpg`\n  },\n  {\n    name: 'cliffRoughness',\n    type: 'texture',\n    path: `${path_start}textures/cliff/cliff_Roughness.jpg`\n  },\n  {\n    name: 'beadParticle',\n    type: 'texture',\n    path: `${path_start}textures/beads/disc.png`\n  },\n  {\n    name: 'lensflare0_Alpha',\n    type: 'texture',\n    path: `${path_start}textures/lensflare/lensflare0_alpha.png`\n  },\n  {\n    name: 'lensflare0',\n    type: 'texture',\n    path: `${path_start}textures/lensflare/lensflare0.png`\n  },\n  {\n    name: 'lensflare1',\n    type: 'texture',\n    path: `${path_start}textures/lensflare/lensflare1.png`\n  },\n  //===== MODELS =====\n  {\n    name: 'handModel',\n    type: 'objModel',\n    path: `${path_start}models/hand/hand.obj`\n  },\n  {\n    name: 'studioLights',\n    type: 'fbxModel',\n    path: `${path_start}models/studio_lights.fbx`\n  },\n  //===== TEST MODELS =====\n  {\n    name: 'coffeeMugModel',\n    type: 'objModel',\n    path: `${path_start}models/coffeeMug1_free_obj/coffeeMug.obj`\n  },\n  {\n    name: 'mandalorianModel',\n    type: 'objModel',\n    path: `${path_start}models/mandalorian.obj`\n  },\n  {\n    name: 'skullModel',\n    type: 'objModel',\n    path: `${path_start}models/skull.obj`\n  },\n  {\n    name: 'teapotModel',\n    type: 'objModel',\n    path: `${path_start}models/teapot.obj`\n  },\n  {\n    name: 'maleHeadModel',\n    type: 'objModel',\n    path: `${path_start}models/male_head.obj`\n  },\n  {\n    name: 'tvModel',\n    type: 'objModel',\n    path: `${path_start}models/tv.obj`\n  },\n  //===== ENVIRONMENT MAPS =====\n  {\n    name: 'environmentMapTexture',\n    type: 'cubeTexture',\n    path: [\n      `${path_start}textures/envMap/0/px.jpg`,\n      `${path_start}textures/envMap/0/nx.jpg`,\n      `${path_start}textures/envMap/0/py.jpg`,\n      `${path_start}textures/envMap/0/ny.jpg`,\n      `${path_start}textures/envMap/0/pz.jpg`,\n      `${path_start}textures/envMap/0/nz.jpg`\n    ]\n  }\n];\n","import { Scene, Mesh } from 'three';\n\n// import { OimoPhysics } from 'three/examples/jsm/physics/OimoPhysics.js';\n\nimport Sizes from './Utils/Sizes';\nimport Time from './Utils/Time';\nimport Camera from './Camera.js';\nimport Renderer from './Renderer';\nimport World from './World/World';\nimport Resources from './Utils/Resources';\nimport Debug from './Utils/Debug';\n\nimport sources from './sources.js';\n\nlet instance = null;\n\nexport default class Experience {\n  constructor(_canvas, reset = false) {\n    if (instance && reset === false) {\n      return instance;\n    }\n\n    instance = this;\n\n    // Global Access\n    // window.experience = this;\n\n    // Options\n    this.canvas = _canvas;\n\n    // Setup\n    this.debug = new Debug();\n    this.sizes = new Sizes();\n    this.time = new Time();\n    this.scene = new Scene();\n    // this.setPhysics();\n    this.resources = new Resources(sources);\n    this.camera = new Camera();\n    this.renderer = new Renderer();\n    this.world = new World();\n\n    // Sizes resize event\n    this.sizes.on('resize', () => {\n      this.resize();\n    });\n\n    // Time tick event\n    this.time.on('tick', () => {\n      this.update();\n    });\n  }\n\n  // async setPhysics() {\n  //   this.physics = await OimoPhysics();\n  // }\n\n  resize() {\n    this.camera.resize();\n    this.renderer.resize();\n  }\n\n  update() {\n    this.camera.update();\n    this.world.update();\n    this.renderer.update();\n  }\n\n  destroy() {\n    this.sizes.off('resize');\n    this.time.off('tick');\n\n    this.scene.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.geometry.dispose();\n\n        for (const key in child.material) {\n          const value = child.material[key];\n          if (value && typeof value.dispose === 'function') {\n            value.dispose();\n          }\n        }\n      }\n    });\n\n    this.camera.controls.dispose();\n    this.renderer.instance.dispose();\n\n    if (this.debug.active) {\n      this.debug.ui.destroy();\n    }\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nimport Experience from '../../webgl/artwork-alastair/Experience';\n\nfunction Art() {\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    console.log('Creating Artwork Alastair');\n    const experience = new Experience(inputEl.current, true);\n\n    return () => {\n      experience.destroy();\n      console.log('Destroying Artwork Alastair');\n    };\n  }, []);\n\n  return <canvas ref={inputEl}></canvas>;\n}\n\nexport default Art;\n"],"names":["EventEmitter","this","callbacks","base","on","_names","callback","console","warn","resolveNames","forEach","_name","name","resolveName","namespace","Object","value","Array","push","off","keys","length","trigger","_args","finalResult","result","args","apply","names","replace","split","newName","parts","original","Sizes","width","window","innerWidth","height","innerHeight","pixelRatio","Math","min","devicePixelRatio","addEventListener","Time","start","Date","now","current","elapsed","delta","requestAnimationFrame","tick","currentTime","Camera","experience","Experience","sizes","scene","canvas","setInstance","setOrbitControls","e","code","controls","enabled","instance","PerspectiveCamera","position","set","add","OrbitControls","target","Vector3","enableDamping","resize","aspect","updateProjectionMatrix","update","autoRotate","autoRotateSpeed","Renderer","camera","WebGLRenderer","antialias","physicallyCorrectLights","outputEncoding","sRGBEncoding","toneMapping","CineonToneMapping","toneMappingExposure","shadowMap","type","PCFSoftShadowMap","setSize","setPixelRatio","render","Environment","resources","debug","active","debugFolder","ui","addFolder","fogColor","fog","Fog","setPointLight","setStudioModel","setEnvironmentMap","x","y","z","pointLight","PointLight","bulbGeometry","SphereGeometry","bulbMat","MeshStandardMaterial","emissive","emissiveIntensity","color","Mesh","intensity","castShadow","setLensflare","studioModel","items","studioLights","children","filter","obj","scale","rotation","PI","lensflare","Lensflare","addElement","LensflareElement","lensflare0","lensflare1","environmentMap","texture","environmentMapTexture","environment","updateMaterials","traverse","child","material","envMap","envMapIntensity","needsUpdate","max","step","Background","setGeometry","setTextures","setMaterial","setMesh","geometry","textures","MeshBasicMaterial","side","BackSide","mesh","Floor","physics","CircleGeometry","map","cliffAlbedo","encoding","repeat","wrapS","RepeatWrapping","wrapT","displacementMap","cliffDisplacement","normalMap","cliffNormal","roughnessMap","cliffRoughness","receiveShadow","Beads","time","objects","vertices","matrix","Matrix4","Color","mouse","Vector2","index","createMesh","handModel","setDragControls","dragControls","activate","resetMesh","deactivate","buttonColor","buttonColorInactive","meshEventHandler","meshEvent","bind","createMeshButton","document","getElementById","resetMeshEventHandler","resetMeshEvent","resetMeshButton","boxGeometry","BoxGeometry","planeGeometry","PlaneGeometry","sphereGeometry","shaderMaterial","ShaderMaterial","uniforms","pointTexture","beadParticle","vertexShader","fragmentShader","transparent","metalness","roughness","createSphere","model","beadScale","beadType","positions","combineBuffer","i","array","log","InstancedMesh","instanceMatrix","setUsage","DynamicDrawUsage","lowestVertexY","highestVertexY","setMatrixAt","setPosition","setColorAt","setHex","random","positionY","DragControls","dispose","object","remove","bufferName","count","isMesh","buffer","attributes","combined","Float32Array","offset","BufferAttribute","debugObject","Sphere","Mandalorian","mandalorianModel","CoffeeMug","coffeeMugModel","CustomMesh","Reset","style","background","removeEventListener","uTime","uBigWavesElevation","uBigWavesFrequency","uBigWavesSpeed","uSmallWavesElevation","uSmallWavesFrequency","uSmallWavesSpeed","uSmallWavesIterations","uDepthColor","uSurfaceColor","uColorOffset","uColorMultiplier","createBox","createPlane","Box","Plane","World","floor","beads","waves","Waves","Resources","sources","toLoad","loaded","setLoaders","startLoading","loaders","gltfLoader","GLTFLoader","objLoader","OBJLoader","fbxLoader","FBXLoader","textureLoader","TextureLoader","cubeTextureLoader","CubeTextureLoader","source","load","path","file","sourceLoaded","Debug","location","hash","GUI","path_start","baseUrl","_canvas","reset","Scene","renderer","world","destroy","key","inputEl","useRef","useEffect","ref"],"sourceRoot":""}