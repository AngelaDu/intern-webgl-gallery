{"version":3,"sources":["webpack://_N_E/./node_modules/three/examples/jsm/shaders/FilmShader.js","webpack://_N_E/./node_modules/three/examples/jsm/postprocessing/FilmPass.js","webpack://_N_E/./node_modules/three/examples/jsm/loaders/SVGLoader.js","webpack://_N_E/./src/utils/threejs/ColorifyShaderMod.js","webpack://_N_E/./src/pages/gallery/artwork2/artwork.js"],"names":["FilmShader","uniforms","value","vertexShader","fragmentShader","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","_Pass","FilmPass","_super","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","_this","undefined","console","error","shader","clone","material","nIntensity","sIntensity","sCount","fsQuad","key","renderer","writeBuffer","readBuffer","deltaTime","texture","renderToScreen","setRenderTarget","render","clear","Pass","_Loader","SVGLoader","manager","defaultDPI","defaultUnit","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","itemError","parseArcCommand","rx","ry","x_axis_rotation","large_arc_flag","sweep_flag","start","end","Math","PI","abs","dx2","x","dy2","y","x1p","cos","sin","y1p","rxs","rys","x1ps","y1ps","cr","s","sqrt","dq","pq","q","max","cxp","cyp","cx","cy","theta","svgAngle","delta","currentPath","absellipse","lineTo","ux","uy","vx","vy","dot","len","ang","acos","min","parseStyle","node","style","Object","assign","stylesheetStyles","hasAttribute","classSelectors","getAttribute","split","filter","Boolean","map","i","trim","length","stylesheets","addStyle","svgName","jsName","adjustFunction","v","startsWith","warn","clamp","parseFloatWithUnits","positive","getReflection","a","b","parseFloats","input","flags","stride","TypeError","current","RE","SEPARATOR","WHITESPACE","DIGIT","SIGN","POINT","COMMA","EXP","FLAGS","state","seenComma","number","exponent","throwSyntaxError","partial","SyntaxError","newNumber","push","Number","pow","Array","isArray","includes","test","units","unitConversion","string","theUnit","String","n","u","endsWith","substring","scale","parseFloat","getTransformScaleX","m","te","elements","getTransformScaleY","paths","transformStack","tempTransform0","tempTransform1","tempTransform2","tempTransform3","tempV2","tempV3","currentTransform","xml","DOMParser","parseFromString","parseNode","nodeType","transform","nodeName","tx","ty","translate","transformsTexts","tIndex","transformText","openParPos","indexOf","closeParPos","transformType","substr","array","identity","_tx","_ty","angle","rotate","multiplyMatrices","scaleX","scaleY","set","tan","premultiply","parseNodeTransform","copy","getNodeTransform","traverseChildNodes","sheet","cssRules","stylesheet","type","selectorList","selectorText","j","parseCSSStylesheet","point","control","firstPoint","isFirstPoint","doSetFirstPoint","commands","match","l","command","charAt","_data","numbers","jl","moveTo","_j","_jl","_j2","_jl2","_j3","_jl3","_j4","_jl4","bezierCurveTo","_j5","_jl5","_j6","_jl6","quadraticCurveTo","_j7","_jl7","_j8","_jl8","_j9","_jl9","_j10","_jl10","_j11","_jl11","_j12","_jl12","_j13","_jl13","_j14","_jl14","_j15","_jl15","_j16","_jl16","_rx","_ry","_j17","_jl17","_start","autoClose","curves","currentPoint","parsePathNode","w","h","parseRectNode","iterator","index","regex","replace","parsePolygonNode","parsePolylineNode","r","subpath","absarc","subPaths","parseCircleNode","parseEllipseNode","x1","y1","x2","y2","parseLineNode","usedNodeId","href","baseVal","usedNode","viewportElement","getElementById","fill","color","setStyle","transfVec2","v2","applyMatrix3","isRotated","isTransformRotated","curve","isLineCurve","v1","isCubicBezierCurve","v0","v3","isQuadraticBezierCurve","isEllipseCurve","aX","aY","xRadius","yRadius","transformPath","userData","nodes","childNodes","pop","documentElement","fillOpacity","strokeOpacity","strokeWidth","strokeLineJoin","strokeLineCap","strokeMiterLimit","shapePath","BIGNUMBER","IntersectionLocationType","classifyResult","loc","t","findEdgeIntersection","a0","a1","b0","b1","x3","x4","y3","y4","nom1","denom","t1","t2","classifyPoint","toPrecision","_i","_point","p","edgeStart","edgeEnd","ax","ay","bx","by","sa","EPSILON","getScanlineIntersections","scanline","boundingBox","center","getCenter","allIntersections","forEach","containsPoint","path1","path2","intersectionsRaw","intersections","path1EdgeStart","path1EdgeEnd","_loop","index2","path2EdgeStart","path2EdgeEnd","intersection","find","getIntersections","points","identifier","isCW","sort","i1","i2","scanlineMinX","scanlineMaxX","simplePaths","getPoints","maxY","minY","maxX","minX","_p","isClockWise","isAHole","sp","simplePath","allPaths","_fillRule","centerBoundingBox","scanlineIntersections","baseIntersections","otherIntersections","firstXOfPath","stack","isHole","isHoleFor","for","_isHole","_isHoleFor","lastCWValue","_i2","_identifier","isHoleTo","fillRule","shapesToReturn","shape","holes","width","lineJoin","lineCap","miterLimit","strokeColor","arcDivisions","minDistance","vertices","normals","uvs","pointsToStrokeWithBuffers","geometry","setAttribute","vertexOffset","tempV2_1","tempV2_2","tempV2_3","tempV2_4","tempV2_5","tempV2_6","tempV2_7","lastPointL","lastPointR","point0L","point0R","currentPointL","currentPointR","nextPointL","nextPointR","innerPoint","outerPoint","numPoints","dupPoints","distanceTo","newPoints","_i3","_n","removeDuplicatedPoints","nextPoint","u1","innerSideModified","joinIsOnLeftSide","isMiter","isClosed","equals","previousPoint","strokeWidth2","deltaU","u0","initialJoinIsOnLeftSide","numVertices","currentCoordinate","currentCoordinateUV","getNormal","multiplyScalar","sub","add","iPoint","normal1","subVectors","normalize","miterSide","setLength","negate","miterLength2","segmentLengthPrev","divideScalar","segmentLengthNext","makeSegmentTriangles","makeSegmentWithBevelJoin","createSegmentTrianglesWithMiddleSection","makeCircularSector","miterFraction","addVertex","addCapGeometry","lastOuter","lastInner","toArray","p1","p2","position","il","rotateAround","addVectors","vl","ColorifyShader","tDiffuse","color1","color2","amount","__jsx","createElement","inputEl","tubeGeo","mesh","bloomPass","filmPass","renderScene","composer","envTexture","colorifier","scene","camera","offsetWidth","offsetHeight","controls","OrbitControls","domElement","pmremGenerator","directionalLight","mouse","wireframe","counter","v3Size","finished","onMouseClick","event","log","onWindowResize","aspect","updateProjectionMatrix","setSize","onPointerMove","clientX","clientY","setPixelRatio","append","addEventListener","dispose","compileEquirectangularShader","outputEncoding","toneMapping","toneMappingExposure","autoRotate","z","update","loadEnv","emissive","setHex","emissiveIntensity","mapping","encoding","background","fog","setupScene","geo","computeLineDistances","visible","rotateX","createPlane","svgData","arcLengthDivisions","computeBoundingBox","ShaderPass","RenderPass","UnrealBloomPass","EffectComposer","addPass","init","animate","requestAnimationFrame","setDrawRange","remove","lookAt","autoRotateSpeed","object","Fragment","ref"],"mappings":"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","file":"static/chunks/f73bd8dde68f8c03fb68fdf7c2470114752ddb2e.3f69ce1fda4ad66f9cdb.js","sourcesContent":["/**\n * Film grain & scanlines shader\n *\n * - ported from HLSL to WebGL / GLSL\n * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n *\n * Screen Space Static Postprocessor\n *\n * Produces an analogue noise overlay similar to a film grain / TV static\n *\n * Original implementation and noise algorithm\n * Pat 'Hawthorne' Shearon\n *\n * Optimized scanlines + noise version with intensity scaling\n * Georg 'Leviathan' Steinrohder\n *\n * This version is provided under a Creative Commons Attribution 3.0 License\n * http://creativecommons.org/licenses/by/3.0/\n */\nvar FilmShader = {\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'time': {\n      value: 0.0\n    },\n    'nIntensity': {\n      value: 0.5\n    },\n    'sIntensity': {\n      value: 0.05\n    },\n    'sCount': {\n      value: 4096\n    },\n    'grayscale': {\n      value: 1\n    }\n  },\n  vertexShader:\n  /* glsl */\n  \"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",\n  fragmentShader:\n  /* glsl */\n  \"\\n\\n\\t\\t#include <common>\\n\\n\\t\\t// control parameter\\n\\t\\tuniform float time;\\n\\n\\t\\tuniform bool grayscale;\\n\\n\\t\\t// noise effect intensity value (0 = no effect, 1 = full effect)\\n\\t\\tuniform float nIntensity;\\n\\n\\t\\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\\n\\t\\tuniform float sIntensity;\\n\\n\\t\\t// scanlines effect count value (0 = no effect, 4096 = full effect)\\n\\t\\tuniform float sCount;\\n\\n\\t\\tuniform sampler2D tDiffuse;\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t// sample the source\\n\\t\\t\\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\\n\\n\\t\\t// make some noise\\n\\t\\t\\tfloat dx = rand( vUv + time );\\n\\n\\t\\t// add noise\\n\\t\\t\\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );\\n\\n\\t\\t// get us a sine and cosine\\n\\t\\t\\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\\n\\n\\t\\t// add scanlines\\n\\t\\t\\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\\n\\n\\t\\t// interpolate between source and result by intensity\\n\\t\\t\\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\\n\\n\\t\\t// convert to grayscale if desired\\n\\t\\t\\tif( grayscale ) {\\n\\n\\t\\t\\t\\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\\n\\n\\t\\t}\"\n};\nexport { FilmShader };","import _classCallCheck from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from '../postprocessing/Pass.js';\nimport { FilmShader } from '../shaders/FilmShader.js';\n\nvar FilmPass = /*#__PURE__*/function (_Pass) {\n  _inherits(FilmPass, _Pass);\n\n  var _super = _createSuper(FilmPass);\n\n  function FilmPass(noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale) {\n    var _this;\n\n    _classCallCheck(this, FilmPass);\n\n    _this = _super.call(this);\n    if (FilmShader === undefined) console.error('THREE.FilmPass relies on FilmShader');\n    var shader = FilmShader;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    if (grayscale !== undefined) _this.uniforms.grayscale.value = grayscale;\n    if (noiseIntensity !== undefined) _this.uniforms.nIntensity.value = noiseIntensity;\n    if (scanlinesIntensity !== undefined) _this.uniforms.sIntensity.value = scanlinesIntensity;\n    if (scanlinesCount !== undefined) _this.uniforms.sCount.value = scanlinesCount;\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n\n  _createClass(FilmPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer, deltaTime\n    /*, maskActive */\n    ) {\n      this.uniforms['tDiffuse'].value = readBuffer.texture;\n      this.uniforms['time'].value += deltaTime;\n\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n    }\n  }]);\n\n  return FilmPass;\n}(Pass);\n\nexport { FilmPass };","import _classCallCheck from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Box2, BufferGeometry, FileLoader, Float32BufferAttribute, Loader, Matrix3, Path, Shape, ShapePath, ShapeUtils, Vector2, Vector3 } from 'three';\n\nvar SVGLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(SVGLoader, _Loader);\n\n  var _super = _createSuper(SVGLoader);\n\n  function SVGLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, SVGLoader);\n\n    _this = _super.call(this, manager); // Default dots per inch\n\n    _this.defaultDPI = 90; // Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n\n    _this.defaultUnit = 'px';\n    return _this;\n  }\n\n  _createClass(SVGLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(text) {\n      var scope = this;\n\n      function parseNode(node, style) {\n        if (node.nodeType !== 1) return;\n        var transform = getNodeTransform(node);\n        var traverseChildNodes = true;\n        var path = null;\n\n        switch (node.nodeName) {\n          case 'svg':\n            break;\n\n          case 'style':\n            parseCSSStylesheet(node);\n            break;\n\n          case 'g':\n            style = parseStyle(node, style);\n            break;\n\n          case 'path':\n            style = parseStyle(node, style);\n            if (node.hasAttribute('d')) path = parsePathNode(node);\n            break;\n\n          case 'rect':\n            style = parseStyle(node, style);\n            path = parseRectNode(node);\n            break;\n\n          case 'polygon':\n            style = parseStyle(node, style);\n            path = parsePolygonNode(node);\n            break;\n\n          case 'polyline':\n            style = parseStyle(node, style);\n            path = parsePolylineNode(node);\n            break;\n\n          case 'circle':\n            style = parseStyle(node, style);\n            path = parseCircleNode(node);\n            break;\n\n          case 'ellipse':\n            style = parseStyle(node, style);\n            path = parseEllipseNode(node);\n            break;\n\n          case 'line':\n            style = parseStyle(node, style);\n            path = parseLineNode(node);\n            break;\n\n          case 'defs':\n            traverseChildNodes = false;\n            break;\n\n          case 'use':\n            style = parseStyle(node, style);\n            var usedNodeId = node.href.baseVal.substring(1);\n            var usedNode = node.viewportElement.getElementById(usedNodeId);\n\n            if (usedNode) {\n              parseNode(usedNode, style);\n            } else {\n              console.warn('SVGLoader: \\'use node\\' references non-existent node id: ' + usedNodeId);\n            }\n\n            break;\n\n          default: // console.log( node );\n\n        }\n\n        if (path) {\n          if (style.fill !== undefined && style.fill !== 'none') {\n            path.color.setStyle(style.fill);\n          }\n\n          transformPath(path, currentTransform);\n          paths.push(path);\n          path.userData = {\n            node: node,\n            style: style\n          };\n        }\n\n        if (traverseChildNodes) {\n          var nodes = node.childNodes;\n\n          for (var i = 0; i < nodes.length; i++) {\n            parseNode(nodes[i], style);\n          }\n        }\n\n        if (transform) {\n          transformStack.pop();\n\n          if (transformStack.length > 0) {\n            currentTransform.copy(transformStack[transformStack.length - 1]);\n          } else {\n            currentTransform.identity();\n          }\n        }\n      }\n\n      function parsePathNode(node) {\n        var path = new ShapePath();\n        var point = new Vector2();\n        var control = new Vector2();\n        var firstPoint = new Vector2();\n        var isFirstPoint = true;\n        var doSetFirstPoint = false;\n        var d = node.getAttribute('d'); // console.log( d );\n\n        var commands = d.match(/[a-df-z][^a-df-z]*/ig);\n\n        for (var i = 0, l = commands.length; i < l; i++) {\n          var command = commands[i];\n          var type = command.charAt(0);\n\n          var _data = command.substr(1).trim();\n\n          if (isFirstPoint === true) {\n            doSetFirstPoint = true;\n            isFirstPoint = false;\n          }\n\n          var numbers = void 0;\n\n          switch (type) {\n            case 'M':\n              numbers = parseFloats(_data);\n\n              for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n                point.x = numbers[j + 0];\n                point.y = numbers[j + 1];\n                control.x = point.x;\n                control.y = point.y;\n\n                if (j === 0) {\n                  path.moveTo(point.x, point.y);\n                } else {\n                  path.lineTo(point.x, point.y);\n                }\n\n                if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'H':\n              numbers = parseFloats(_data);\n\n              for (var _j = 0, _jl = numbers.length; _j < _jl; _j++) {\n                point.x = numbers[_j];\n                control.x = point.x;\n                control.y = point.y;\n                path.lineTo(point.x, point.y);\n                if (_j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'V':\n              numbers = parseFloats(_data);\n\n              for (var _j2 = 0, _jl2 = numbers.length; _j2 < _jl2; _j2++) {\n                point.y = numbers[_j2];\n                control.x = point.x;\n                control.y = point.y;\n                path.lineTo(point.x, point.y);\n                if (_j2 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'L':\n              numbers = parseFloats(_data);\n\n              for (var _j3 = 0, _jl3 = numbers.length; _j3 < _jl3; _j3 += 2) {\n                point.x = numbers[_j3 + 0];\n                point.y = numbers[_j3 + 1];\n                control.x = point.x;\n                control.y = point.y;\n                path.lineTo(point.x, point.y);\n                if (_j3 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'C':\n              numbers = parseFloats(_data);\n\n              for (var _j4 = 0, _jl4 = numbers.length; _j4 < _jl4; _j4 += 6) {\n                path.bezierCurveTo(numbers[_j4 + 0], numbers[_j4 + 1], numbers[_j4 + 2], numbers[_j4 + 3], numbers[_j4 + 4], numbers[_j4 + 5]);\n                control.x = numbers[_j4 + 2];\n                control.y = numbers[_j4 + 3];\n                point.x = numbers[_j4 + 4];\n                point.y = numbers[_j4 + 5];\n                if (_j4 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'S':\n              numbers = parseFloats(_data);\n\n              for (var _j5 = 0, _jl5 = numbers.length; _j5 < _jl5; _j5 += 4) {\n                path.bezierCurveTo(getReflection(point.x, control.x), getReflection(point.y, control.y), numbers[_j5 + 0], numbers[_j5 + 1], numbers[_j5 + 2], numbers[_j5 + 3]);\n                control.x = numbers[_j5 + 0];\n                control.y = numbers[_j5 + 1];\n                point.x = numbers[_j5 + 2];\n                point.y = numbers[_j5 + 3];\n                if (_j5 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'Q':\n              numbers = parseFloats(_data);\n\n              for (var _j6 = 0, _jl6 = numbers.length; _j6 < _jl6; _j6 += 4) {\n                path.quadraticCurveTo(numbers[_j6 + 0], numbers[_j6 + 1], numbers[_j6 + 2], numbers[_j6 + 3]);\n                control.x = numbers[_j6 + 0];\n                control.y = numbers[_j6 + 1];\n                point.x = numbers[_j6 + 2];\n                point.y = numbers[_j6 + 3];\n                if (_j6 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'T':\n              numbers = parseFloats(_data);\n\n              for (var _j7 = 0, _jl7 = numbers.length; _j7 < _jl7; _j7 += 2) {\n                var rx = getReflection(point.x, control.x);\n                var ry = getReflection(point.y, control.y);\n                path.quadraticCurveTo(rx, ry, numbers[_j7 + 0], numbers[_j7 + 1]);\n                control.x = rx;\n                control.y = ry;\n                point.x = numbers[_j7 + 0];\n                point.y = numbers[_j7 + 1];\n                if (_j7 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'A':\n              numbers = parseFloats(_data, [3, 4], 7);\n\n              for (var _j8 = 0, _jl8 = numbers.length; _j8 < _jl8; _j8 += 7) {\n                // skip command if start point == end point\n                if (numbers[_j8 + 5] == point.x && numbers[_j8 + 6] == point.y) continue;\n                var start = point.clone();\n                point.x = numbers[_j8 + 5];\n                point.y = numbers[_j8 + 6];\n                control.x = point.x;\n                control.y = point.y;\n                parseArcCommand(path, numbers[_j8], numbers[_j8 + 1], numbers[_j8 + 2], numbers[_j8 + 3], numbers[_j8 + 4], start, point);\n                if (_j8 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'm':\n              numbers = parseFloats(_data);\n\n              for (var _j9 = 0, _jl9 = numbers.length; _j9 < _jl9; _j9 += 2) {\n                point.x += numbers[_j9 + 0];\n                point.y += numbers[_j9 + 1];\n                control.x = point.x;\n                control.y = point.y;\n\n                if (_j9 === 0) {\n                  path.moveTo(point.x, point.y);\n                } else {\n                  path.lineTo(point.x, point.y);\n                }\n\n                if (_j9 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'h':\n              numbers = parseFloats(_data);\n\n              for (var _j10 = 0, _jl10 = numbers.length; _j10 < _jl10; _j10++) {\n                point.x += numbers[_j10];\n                control.x = point.x;\n                control.y = point.y;\n                path.lineTo(point.x, point.y);\n                if (_j10 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'v':\n              numbers = parseFloats(_data);\n\n              for (var _j11 = 0, _jl11 = numbers.length; _j11 < _jl11; _j11++) {\n                point.y += numbers[_j11];\n                control.x = point.x;\n                control.y = point.y;\n                path.lineTo(point.x, point.y);\n                if (_j11 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'l':\n              numbers = parseFloats(_data);\n\n              for (var _j12 = 0, _jl12 = numbers.length; _j12 < _jl12; _j12 += 2) {\n                point.x += numbers[_j12 + 0];\n                point.y += numbers[_j12 + 1];\n                control.x = point.x;\n                control.y = point.y;\n                path.lineTo(point.x, point.y);\n                if (_j12 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'c':\n              numbers = parseFloats(_data);\n\n              for (var _j13 = 0, _jl13 = numbers.length; _j13 < _jl13; _j13 += 6) {\n                path.bezierCurveTo(point.x + numbers[_j13 + 0], point.y + numbers[_j13 + 1], point.x + numbers[_j13 + 2], point.y + numbers[_j13 + 3], point.x + numbers[_j13 + 4], point.y + numbers[_j13 + 5]);\n                control.x = point.x + numbers[_j13 + 2];\n                control.y = point.y + numbers[_j13 + 3];\n                point.x += numbers[_j13 + 4];\n                point.y += numbers[_j13 + 5];\n                if (_j13 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 's':\n              numbers = parseFloats(_data);\n\n              for (var _j14 = 0, _jl14 = numbers.length; _j14 < _jl14; _j14 += 4) {\n                path.bezierCurveTo(getReflection(point.x, control.x), getReflection(point.y, control.y), point.x + numbers[_j14 + 0], point.y + numbers[_j14 + 1], point.x + numbers[_j14 + 2], point.y + numbers[_j14 + 3]);\n                control.x = point.x + numbers[_j14 + 0];\n                control.y = point.y + numbers[_j14 + 1];\n                point.x += numbers[_j14 + 2];\n                point.y += numbers[_j14 + 3];\n                if (_j14 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'q':\n              numbers = parseFloats(_data);\n\n              for (var _j15 = 0, _jl15 = numbers.length; _j15 < _jl15; _j15 += 4) {\n                path.quadraticCurveTo(point.x + numbers[_j15 + 0], point.y + numbers[_j15 + 1], point.x + numbers[_j15 + 2], point.y + numbers[_j15 + 3]);\n                control.x = point.x + numbers[_j15 + 0];\n                control.y = point.y + numbers[_j15 + 1];\n                point.x += numbers[_j15 + 2];\n                point.y += numbers[_j15 + 3];\n                if (_j15 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 't':\n              numbers = parseFloats(_data);\n\n              for (var _j16 = 0, _jl16 = numbers.length; _j16 < _jl16; _j16 += 2) {\n                var _rx = getReflection(point.x, control.x);\n\n                var _ry = getReflection(point.y, control.y);\n\n                path.quadraticCurveTo(_rx, _ry, point.x + numbers[_j16 + 0], point.y + numbers[_j16 + 1]);\n                control.x = _rx;\n                control.y = _ry;\n                point.x = point.x + numbers[_j16 + 0];\n                point.y = point.y + numbers[_j16 + 1];\n                if (_j16 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'a':\n              numbers = parseFloats(_data, [3, 4], 7);\n\n              for (var _j17 = 0, _jl17 = numbers.length; _j17 < _jl17; _j17 += 7) {\n                // skip command if no displacement\n                if (numbers[_j17 + 5] == 0 && numbers[_j17 + 6] == 0) continue;\n\n                var _start = point.clone();\n\n                point.x += numbers[_j17 + 5];\n                point.y += numbers[_j17 + 6];\n                control.x = point.x;\n                control.y = point.y;\n                parseArcCommand(path, numbers[_j17], numbers[_j17 + 1], numbers[_j17 + 2], numbers[_j17 + 3], numbers[_j17 + 4], _start, point);\n                if (_j17 === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n              }\n\n              break;\n\n            case 'Z':\n            case 'z':\n              path.currentPath.autoClose = true;\n\n              if (path.currentPath.curves.length > 0) {\n                // Reset point to beginning of Path\n                point.copy(firstPoint);\n                path.currentPath.currentPoint.copy(point);\n                isFirstPoint = true;\n              }\n\n              break;\n\n            default:\n              console.warn(command);\n          } // console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n\n          doSetFirstPoint = false;\n        }\n\n        return path;\n      }\n\n      function parseCSSStylesheet(node) {\n        if (!node.sheet || !node.sheet.cssRules || !node.sheet.cssRules.length) return;\n\n        for (var i = 0; i < node.sheet.cssRules.length; i++) {\n          var stylesheet = node.sheet.cssRules[i];\n          if (stylesheet.type !== 1) continue;\n          var selectorList = stylesheet.selectorText.split(/,/gm).filter(Boolean).map(function (i) {\n            return i.trim();\n          });\n\n          for (var j = 0; j < selectorList.length; j++) {\n            stylesheets[selectorList[j]] = Object.assign(stylesheets[selectorList[j]] || {}, stylesheet.style);\n          }\n        }\n      }\n      /**\n       * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n       * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n       * From\n       * rx ry x-axis-rotation large-arc-flag sweep-flag x y\n       * To\n       * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\n       */\n\n\n      function parseArcCommand(path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end) {\n        if (rx == 0 || ry == 0) {\n          // draw a line if either of the radii == 0\n          path.lineTo(end.x, end.y);\n          return;\n        }\n\n        x_axis_rotation = x_axis_rotation * Math.PI / 180; // Ensure radii are positive\n\n        rx = Math.abs(rx);\n        ry = Math.abs(ry); // Compute (x1', y1')\n\n        var dx2 = (start.x - end.x) / 2.0;\n        var dy2 = (start.y - end.y) / 2.0;\n        var x1p = Math.cos(x_axis_rotation) * dx2 + Math.sin(x_axis_rotation) * dy2;\n        var y1p = -Math.sin(x_axis_rotation) * dx2 + Math.cos(x_axis_rotation) * dy2; // Compute (cx', cy')\n\n        var rxs = rx * rx;\n        var rys = ry * ry;\n        var x1ps = x1p * x1p;\n        var y1ps = y1p * y1p; // Ensure radii are large enough\n\n        var cr = x1ps / rxs + y1ps / rys;\n\n        if (cr > 1) {\n          // scale up rx,ry equally so cr == 1\n          var s = Math.sqrt(cr);\n          rx = s * rx;\n          ry = s * ry;\n          rxs = rx * rx;\n          rys = ry * ry;\n        }\n\n        var dq = rxs * y1ps + rys * x1ps;\n        var pq = (rxs * rys - dq) / dq;\n        var q = Math.sqrt(Math.max(0, pq));\n        if (large_arc_flag === sweep_flag) q = -q;\n        var cxp = q * rx * y1p / ry;\n        var cyp = -q * ry * x1p / rx; // Step 3: Compute (cx, cy) from (cx', cy')\n\n        var cx = Math.cos(x_axis_rotation) * cxp - Math.sin(x_axis_rotation) * cyp + (start.x + end.x) / 2;\n        var cy = Math.sin(x_axis_rotation) * cxp + Math.cos(x_axis_rotation) * cyp + (start.y + end.y) / 2; // Step 4: Compute θ1 and Δθ\n\n        var theta = svgAngle(1, 0, (x1p - cxp) / rx, (y1p - cyp) / ry);\n        var delta = svgAngle((x1p - cxp) / rx, (y1p - cyp) / ry, (-x1p - cxp) / rx, (-y1p - cyp) / ry) % (Math.PI * 2);\n        path.currentPath.absellipse(cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation);\n      }\n\n      function svgAngle(ux, uy, vx, vy) {\n        var dot = ux * vx + uy * vy;\n        var len = Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);\n        var ang = Math.acos(Math.max(-1, Math.min(1, dot / len))); // floating point precision, slightly over values appear\n\n        if (ux * vy - uy * vx < 0) ang = -ang;\n        return ang;\n      }\n      /*\n      * According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\n      * rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\n      */\n\n\n      function parseRectNode(node) {\n        var x = parseFloatWithUnits(node.getAttribute('x') || 0);\n        var y = parseFloatWithUnits(node.getAttribute('y') || 0);\n        var rx = parseFloatWithUnits(node.getAttribute('rx') || 0);\n        var ry = parseFloatWithUnits(node.getAttribute('ry') || 0);\n        var w = parseFloatWithUnits(node.getAttribute('width'));\n        var h = parseFloatWithUnits(node.getAttribute('height'));\n        var path = new ShapePath();\n        path.moveTo(x + 2 * rx, y);\n        path.lineTo(x + w - 2 * rx, y);\n        if (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y, x + w, y, x + w, y + 2 * ry);\n        path.lineTo(x + w, y + h - 2 * ry);\n        if (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y + h, x + w, y + h, x + w - 2 * rx, y + h);\n        path.lineTo(x + 2 * rx, y + h);\n\n        if (rx !== 0 || ry !== 0) {\n          path.bezierCurveTo(x, y + h, x, y + h, x, y + h - 2 * ry);\n        }\n\n        path.lineTo(x, y + 2 * ry);\n\n        if (rx !== 0 || ry !== 0) {\n          path.bezierCurveTo(x, y, x, y, x + 2 * rx, y);\n        }\n\n        return path;\n      }\n\n      function parsePolygonNode(node) {\n        function iterator(match, a, b) {\n          var x = parseFloatWithUnits(a);\n          var y = parseFloatWithUnits(b);\n\n          if (index === 0) {\n            path.moveTo(x, y);\n          } else {\n            path.lineTo(x, y);\n          }\n\n          index++;\n        }\n\n        var regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n        var path = new ShapePath();\n        var index = 0;\n        node.getAttribute('points').replace(regex, iterator);\n        path.currentPath.autoClose = true;\n        return path;\n      }\n\n      function parsePolylineNode(node) {\n        function iterator(match, a, b) {\n          var x = parseFloatWithUnits(a);\n          var y = parseFloatWithUnits(b);\n\n          if (index === 0) {\n            path.moveTo(x, y);\n          } else {\n            path.lineTo(x, y);\n          }\n\n          index++;\n        }\n\n        var regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n        var path = new ShapePath();\n        var index = 0;\n        node.getAttribute('points').replace(regex, iterator);\n        path.currentPath.autoClose = false;\n        return path;\n      }\n\n      function parseCircleNode(node) {\n        var x = parseFloatWithUnits(node.getAttribute('cx') || 0);\n        var y = parseFloatWithUnits(node.getAttribute('cy') || 0);\n        var r = parseFloatWithUnits(node.getAttribute('r') || 0);\n        var subpath = new Path();\n        subpath.absarc(x, y, r, 0, Math.PI * 2);\n        var path = new ShapePath();\n        path.subPaths.push(subpath);\n        return path;\n      }\n\n      function parseEllipseNode(node) {\n        var x = parseFloatWithUnits(node.getAttribute('cx') || 0);\n        var y = parseFloatWithUnits(node.getAttribute('cy') || 0);\n        var rx = parseFloatWithUnits(node.getAttribute('rx') || 0);\n        var ry = parseFloatWithUnits(node.getAttribute('ry') || 0);\n        var subpath = new Path();\n        subpath.absellipse(x, y, rx, ry, 0, Math.PI * 2);\n        var path = new ShapePath();\n        path.subPaths.push(subpath);\n        return path;\n      }\n\n      function parseLineNode(node) {\n        var x1 = parseFloatWithUnits(node.getAttribute('x1') || 0);\n        var y1 = parseFloatWithUnits(node.getAttribute('y1') || 0);\n        var x2 = parseFloatWithUnits(node.getAttribute('x2') || 0);\n        var y2 = parseFloatWithUnits(node.getAttribute('y2') || 0);\n        var path = new ShapePath();\n        path.moveTo(x1, y1);\n        path.lineTo(x2, y2);\n        path.currentPath.autoClose = false;\n        return path;\n      } //\n\n\n      function parseStyle(node, style) {\n        style = Object.assign({}, style); // clone style\n\n        var stylesheetStyles = {};\n\n        if (node.hasAttribute('class')) {\n          var classSelectors = node.getAttribute('class').split(/\\s/).filter(Boolean).map(function (i) {\n            return i.trim();\n          });\n\n          for (var i = 0; i < classSelectors.length; i++) {\n            stylesheetStyles = Object.assign(stylesheetStyles, stylesheets['.' + classSelectors[i]]);\n          }\n        }\n\n        if (node.hasAttribute('id')) {\n          stylesheetStyles = Object.assign(stylesheetStyles, stylesheets['#' + node.getAttribute('id')]);\n        }\n\n        function addStyle(svgName, jsName, adjustFunction) {\n          if (adjustFunction === undefined) adjustFunction = function copy(v) {\n            if (v.startsWith('url')) console.warn('SVGLoader: url access in attributes is not implemented.');\n            return v;\n          };\n          if (node.hasAttribute(svgName)) style[jsName] = adjustFunction(node.getAttribute(svgName));\n          if (stylesheetStyles[svgName]) style[jsName] = adjustFunction(stylesheetStyles[svgName]);\n          if (node.style && node.style[svgName] !== '') style[jsName] = adjustFunction(node.style[svgName]);\n        }\n\n        function clamp(v) {\n          return Math.max(0, Math.min(1, parseFloatWithUnits(v)));\n        }\n\n        function positive(v) {\n          return Math.max(0, parseFloatWithUnits(v));\n        }\n\n        addStyle('fill', 'fill');\n        addStyle('fill-opacity', 'fillOpacity', clamp);\n        addStyle('opacity', 'opacity', clamp);\n        addStyle('stroke', 'stroke');\n        addStyle('stroke-opacity', 'strokeOpacity', clamp);\n        addStyle('stroke-width', 'strokeWidth', positive);\n        addStyle('stroke-linejoin', 'strokeLineJoin');\n        addStyle('stroke-linecap', 'strokeLineCap');\n        addStyle('stroke-miterlimit', 'strokeMiterLimit', positive);\n        addStyle('visibility', 'visibility');\n        return style;\n      } // http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n\n\n      function getReflection(a, b) {\n        return a - (b - a);\n      } // from https://github.com/ppvg/svg-numbers (MIT License)\n\n\n      function parseFloats(input, flags, stride) {\n        if (typeof input !== 'string') {\n          throw new TypeError('Invalid input: ' + typeof input);\n        } // Character groups\n\n\n        var RE = {\n          SEPARATOR: /[ \\t\\r\\n\\,.\\-+]/,\n          WHITESPACE: /[ \\t\\r\\n]/,\n          DIGIT: /[\\d]/,\n          SIGN: /[-+]/,\n          POINT: /\\./,\n          COMMA: /,/,\n          EXP: /e/i,\n          FLAGS: /[01]/\n        }; // States\n\n        var SEP = 0;\n        var INT = 1;\n        var FLOAT = 2;\n        var EXP = 3;\n        var state = SEP;\n        var seenComma = true;\n        var number = '',\n            exponent = '';\n        var result = [];\n\n        function throwSyntaxError(current, i, partial) {\n          var error = new SyntaxError('Unexpected character \"' + current + '\" at index ' + i + '.');\n          error.partial = partial;\n          throw error;\n        }\n\n        function newNumber() {\n          if (number !== '') {\n            if (exponent === '') result.push(Number(number));else result.push(Number(number) * Math.pow(10, Number(exponent)));\n          }\n\n          number = '';\n          exponent = '';\n        }\n\n        var current;\n        var length = input.length;\n\n        for (var i = 0; i < length; i++) {\n          current = input[i]; // check for flags\n\n          if (Array.isArray(flags) && flags.includes(result.length % stride) && RE.FLAGS.test(current)) {\n            state = INT;\n            number = current;\n            newNumber();\n            continue;\n          } // parse until next number\n\n\n          if (state === SEP) {\n            // eat whitespace\n            if (RE.WHITESPACE.test(current)) {\n              continue;\n            } // start new number\n\n\n            if (RE.DIGIT.test(current) || RE.SIGN.test(current)) {\n              state = INT;\n              number = current;\n              continue;\n            }\n\n            if (RE.POINT.test(current)) {\n              state = FLOAT;\n              number = current;\n              continue;\n            } // throw on double commas (e.g. \"1, , 2\")\n\n\n            if (RE.COMMA.test(current)) {\n              if (seenComma) {\n                throwSyntaxError(current, i, result);\n              }\n\n              seenComma = true;\n            }\n          } // parse integer part\n\n\n          if (state === INT) {\n            if (RE.DIGIT.test(current)) {\n              number += current;\n              continue;\n            }\n\n            if (RE.POINT.test(current)) {\n              number += current;\n              state = FLOAT;\n              continue;\n            }\n\n            if (RE.EXP.test(current)) {\n              state = EXP;\n              continue;\n            } // throw on double signs (\"-+1\"), but not on sign as separator (\"-1-2\")\n\n\n            if (RE.SIGN.test(current) && number.length === 1 && RE.SIGN.test(number[0])) {\n              throwSyntaxError(current, i, result);\n            }\n          } // parse decimal part\n\n\n          if (state === FLOAT) {\n            if (RE.DIGIT.test(current)) {\n              number += current;\n              continue;\n            }\n\n            if (RE.EXP.test(current)) {\n              state = EXP;\n              continue;\n            } // throw on double decimal points (e.g. \"1..2\")\n\n\n            if (RE.POINT.test(current) && number[number.length - 1] === '.') {\n              throwSyntaxError(current, i, result);\n            }\n          } // parse exponent part\n\n\n          if (state === EXP) {\n            if (RE.DIGIT.test(current)) {\n              exponent += current;\n              continue;\n            }\n\n            if (RE.SIGN.test(current)) {\n              if (exponent === '') {\n                exponent += current;\n                continue;\n              }\n\n              if (exponent.length === 1 && RE.SIGN.test(exponent)) {\n                throwSyntaxError(current, i, result);\n              }\n            }\n          } // end of number\n\n\n          if (RE.WHITESPACE.test(current)) {\n            newNumber();\n            state = SEP;\n            seenComma = false;\n          } else if (RE.COMMA.test(current)) {\n            newNumber();\n            state = SEP;\n            seenComma = true;\n          } else if (RE.SIGN.test(current)) {\n            newNumber();\n            state = INT;\n            number = current;\n          } else if (RE.POINT.test(current)) {\n            newNumber();\n            state = FLOAT;\n            number = current;\n          } else {\n            throwSyntaxError(current, i, result);\n          }\n        } // add the last number found (if any)\n\n\n        newNumber();\n        return result;\n      } // Units\n\n\n      var units = ['mm', 'cm', 'in', 'pt', 'pc', 'px']; // Conversion: [ fromUnit ][ toUnit ] (-1 means dpi dependent)\n\n      var unitConversion = {\n        'mm': {\n          'mm': 1,\n          'cm': 0.1,\n          'in': 1 / 25.4,\n          'pt': 72 / 25.4,\n          'pc': 6 / 25.4,\n          'px': -1\n        },\n        'cm': {\n          'mm': 10,\n          'cm': 1,\n          'in': 1 / 2.54,\n          'pt': 72 / 2.54,\n          'pc': 6 / 2.54,\n          'px': -1\n        },\n        'in': {\n          'mm': 25.4,\n          'cm': 2.54,\n          'in': 1,\n          'pt': 72,\n          'pc': 6,\n          'px': -1\n        },\n        'pt': {\n          'mm': 25.4 / 72,\n          'cm': 2.54 / 72,\n          'in': 1 / 72,\n          'pt': 1,\n          'pc': 6 / 72,\n          'px': -1\n        },\n        'pc': {\n          'mm': 25.4 / 6,\n          'cm': 2.54 / 6,\n          'in': 1 / 6,\n          'pt': 72 / 6,\n          'pc': 1,\n          'px': -1\n        },\n        'px': {\n          'px': 1\n        }\n      };\n\n      function parseFloatWithUnits(string) {\n        var theUnit = 'px';\n\n        if (typeof string === 'string' || string instanceof String) {\n          for (var i = 0, n = units.length; i < n; i++) {\n            var u = units[i];\n\n            if (string.endsWith(u)) {\n              theUnit = u;\n              string = string.substring(0, string.length - u.length);\n              break;\n            }\n          }\n        }\n\n        var scale = undefined;\n\n        if (theUnit === 'px' && scope.defaultUnit !== 'px') {\n          // Conversion scale from  pixels to inches, then to default units\n          scale = unitConversion['in'][scope.defaultUnit] / scope.defaultDPI;\n        } else {\n          scale = unitConversion[theUnit][scope.defaultUnit];\n\n          if (scale < 0) {\n            // Conversion scale to pixels\n            scale = unitConversion[theUnit]['in'] * scope.defaultDPI;\n          }\n        }\n\n        return scale * parseFloat(string);\n      } // Transforms\n\n\n      function getNodeTransform(node) {\n        if (!(node.hasAttribute('transform') || node.nodeName === 'use' && (node.hasAttribute('x') || node.hasAttribute('y')))) {\n          return null;\n        }\n\n        var transform = parseNodeTransform(node);\n\n        if (transformStack.length > 0) {\n          transform.premultiply(transformStack[transformStack.length - 1]);\n        }\n\n        currentTransform.copy(transform);\n        transformStack.push(transform);\n        return transform;\n      }\n\n      function parseNodeTransform(node) {\n        var transform = new Matrix3();\n        var currentTransform = tempTransform0;\n\n        if (node.nodeName === 'use' && (node.hasAttribute('x') || node.hasAttribute('y'))) {\n          var tx = parseFloatWithUnits(node.getAttribute('x'));\n          var ty = parseFloatWithUnits(node.getAttribute('y'));\n          transform.translate(tx, ty);\n        }\n\n        if (node.hasAttribute('transform')) {\n          var transformsTexts = node.getAttribute('transform').split(')');\n\n          for (var tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex--) {\n            var transformText = transformsTexts[tIndex].trim();\n            if (transformText === '') continue;\n            var openParPos = transformText.indexOf('(');\n            var closeParPos = transformText.length;\n\n            if (openParPos > 0 && openParPos < closeParPos) {\n              var transformType = transformText.substr(0, openParPos);\n              var array = parseFloats(transformText.substr(openParPos + 1, closeParPos - openParPos - 1));\n              currentTransform.identity();\n\n              switch (transformType) {\n                case 'translate':\n                  if (array.length >= 1) {\n                    var _tx = array[0];\n                    var _ty = _tx;\n\n                    if (array.length >= 2) {\n                      _ty = array[1];\n                    }\n\n                    currentTransform.translate(_tx, _ty);\n                  }\n\n                  break;\n\n                case 'rotate':\n                  if (array.length >= 1) {\n                    var angle = 0;\n                    var cx = 0;\n                    var cy = 0; // Angle\n\n                    angle = -array[0] * Math.PI / 180;\n\n                    if (array.length >= 3) {\n                      // Center x, y\n                      cx = array[1];\n                      cy = array[2];\n                    } // Rotate around center (cx, cy)\n\n\n                    tempTransform1.identity().translate(-cx, -cy);\n                    tempTransform2.identity().rotate(angle);\n                    tempTransform3.multiplyMatrices(tempTransform2, tempTransform1);\n                    tempTransform1.identity().translate(cx, cy);\n                    currentTransform.multiplyMatrices(tempTransform1, tempTransform3);\n                  }\n\n                  break;\n\n                case 'scale':\n                  if (array.length >= 1) {\n                    var scaleX = array[0];\n                    var scaleY = scaleX;\n\n                    if (array.length >= 2) {\n                      scaleY = array[1];\n                    }\n\n                    currentTransform.scale(scaleX, scaleY);\n                  }\n\n                  break;\n\n                case 'skewX':\n                  if (array.length === 1) {\n                    currentTransform.set(1, Math.tan(array[0] * Math.PI / 180), 0, 0, 1, 0, 0, 0, 1);\n                  }\n\n                  break;\n\n                case 'skewY':\n                  if (array.length === 1) {\n                    currentTransform.set(1, 0, 0, Math.tan(array[0] * Math.PI / 180), 1, 0, 0, 0, 1);\n                  }\n\n                  break;\n\n                case 'matrix':\n                  if (array.length === 6) {\n                    currentTransform.set(array[0], array[2], array[4], array[1], array[3], array[5], 0, 0, 1);\n                  }\n\n                  break;\n              }\n            }\n\n            transform.premultiply(currentTransform);\n          }\n        }\n\n        return transform;\n      }\n\n      function transformPath(path, m) {\n        function transfVec2(v2) {\n          tempV3.set(v2.x, v2.y, 1).applyMatrix3(m);\n          v2.set(tempV3.x, tempV3.y);\n        }\n\n        var isRotated = isTransformRotated(m);\n        var subPaths = path.subPaths;\n\n        for (var i = 0, n = subPaths.length; i < n; i++) {\n          var subPath = subPaths[i];\n          var curves = subPath.curves;\n\n          for (var j = 0; j < curves.length; j++) {\n            var curve = curves[j];\n\n            if (curve.isLineCurve) {\n              transfVec2(curve.v1);\n              transfVec2(curve.v2);\n            } else if (curve.isCubicBezierCurve) {\n              transfVec2(curve.v0);\n              transfVec2(curve.v1);\n              transfVec2(curve.v2);\n              transfVec2(curve.v3);\n            } else if (curve.isQuadraticBezierCurve) {\n              transfVec2(curve.v0);\n              transfVec2(curve.v1);\n              transfVec2(curve.v2);\n            } else if (curve.isEllipseCurve) {\n              if (isRotated) {\n                console.warn('SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented.');\n              }\n\n              tempV2.set(curve.aX, curve.aY);\n              transfVec2(tempV2);\n              curve.aX = tempV2.x;\n              curve.aY = tempV2.y;\n              curve.xRadius *= getTransformScaleX(m);\n              curve.yRadius *= getTransformScaleY(m);\n            }\n          }\n        }\n      }\n\n      function isTransformRotated(m) {\n        return m.elements[1] !== 0 || m.elements[3] !== 0;\n      }\n\n      function getTransformScaleX(m) {\n        var te = m.elements;\n        return Math.sqrt(te[0] * te[0] + te[1] * te[1]);\n      }\n\n      function getTransformScaleY(m) {\n        var te = m.elements;\n        return Math.sqrt(te[3] * te[3] + te[4] * te[4]);\n      } //\n\n\n      var paths = [];\n      var stylesheets = {};\n      var transformStack = [];\n      var tempTransform0 = new Matrix3();\n      var tempTransform1 = new Matrix3();\n      var tempTransform2 = new Matrix3();\n      var tempTransform3 = new Matrix3();\n      var tempV2 = new Vector2();\n      var tempV3 = new Vector3();\n      var currentTransform = new Matrix3();\n      var xml = new DOMParser().parseFromString(text, 'image/svg+xml'); // application/xml\n\n      parseNode(xml.documentElement, {\n        fill: '#000',\n        fillOpacity: 1,\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        strokeLineJoin: 'miter',\n        strokeLineCap: 'butt',\n        strokeMiterLimit: 4\n      });\n      var data = {\n        paths: paths,\n        xml: xml.documentElement\n      }; // console.log( paths );\n\n      return data;\n    }\n  }], [{\n    key: \"createShapes\",\n    value: function createShapes(shapePath) {\n      // Param shapePath: a shapepath as returned by the parse function of this class\n      // Returns Shape object\n      var BIGNUMBER = 999999999;\n      var IntersectionLocationType = {\n        ORIGIN: 0,\n        DESTINATION: 1,\n        BETWEEN: 2,\n        LEFT: 3,\n        RIGHT: 4,\n        BEHIND: 5,\n        BEYOND: 6\n      };\n      var classifyResult = {\n        loc: IntersectionLocationType.ORIGIN,\n        t: 0\n      };\n\n      function findEdgeIntersection(a0, a1, b0, b1) {\n        var x1 = a0.x;\n        var x2 = a1.x;\n        var x3 = b0.x;\n        var x4 = b1.x;\n        var y1 = a0.y;\n        var y2 = a1.y;\n        var y3 = b0.y;\n        var y4 = b1.y;\n        var nom1 = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n        var nom2 = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n        var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n        var t1 = nom1 / denom;\n        var t2 = nom2 / denom;\n\n        if (denom === 0 && nom1 !== 0 || t1 <= 0 || t1 >= 1 || t2 < 0 || t2 > 1) {\n          //1. lines are parallel or edges don't intersect\n          return null;\n        } else if (nom1 === 0 && denom === 0) {\n          //2. lines are colinear\n          //check if endpoints of edge2 (b0-b1) lies on edge1 (a0-a1)\n          for (var i = 0; i < 2; i++) {\n            classifyPoint(i === 0 ? b0 : b1, a0, a1); //find position of this endpoints relatively to edge1\n\n            if (classifyResult.loc == IntersectionLocationType.ORIGIN) {\n              var point = i === 0 ? b0 : b1;\n              return {\n                x: point.x,\n                y: point.y,\n                t: classifyResult.t\n              };\n            } else if (classifyResult.loc == IntersectionLocationType.BETWEEN) {\n              var x = +(x1 + classifyResult.t * (x2 - x1)).toPrecision(10);\n              var y = +(y1 + classifyResult.t * (y2 - y1)).toPrecision(10);\n              return {\n                x: x,\n                y: y,\n                t: classifyResult.t\n              };\n            }\n          }\n\n          return null;\n        } else {\n          //3. edges intersect\n          for (var _i = 0; _i < 2; _i++) {\n            classifyPoint(_i === 0 ? b0 : b1, a0, a1);\n\n            if (classifyResult.loc == IntersectionLocationType.ORIGIN) {\n              var _point = _i === 0 ? b0 : b1;\n\n              return {\n                x: _point.x,\n                y: _point.y,\n                t: classifyResult.t\n              };\n            }\n          }\n\n          var _x = +(x1 + t1 * (x2 - x1)).toPrecision(10);\n\n          var _y = +(y1 + t1 * (y2 - y1)).toPrecision(10);\n\n          return {\n            x: _x,\n            y: _y,\n            t: t1\n          };\n        }\n      }\n\n      function classifyPoint(p, edgeStart, edgeEnd) {\n        var ax = edgeEnd.x - edgeStart.x;\n        var ay = edgeEnd.y - edgeStart.y;\n        var bx = p.x - edgeStart.x;\n        var by = p.y - edgeStart.y;\n        var sa = ax * by - bx * ay;\n\n        if (p.x === edgeStart.x && p.y === edgeStart.y) {\n          classifyResult.loc = IntersectionLocationType.ORIGIN;\n          classifyResult.t = 0;\n          return;\n        }\n\n        if (p.x === edgeEnd.x && p.y === edgeEnd.y) {\n          classifyResult.loc = IntersectionLocationType.DESTINATION;\n          classifyResult.t = 1;\n          return;\n        }\n\n        if (sa < -Number.EPSILON) {\n          classifyResult.loc = IntersectionLocationType.LEFT;\n          return;\n        }\n\n        if (sa > Number.EPSILON) {\n          classifyResult.loc = IntersectionLocationType.RIGHT;\n          return;\n        }\n\n        if (ax * bx < 0 || ay * by < 0) {\n          classifyResult.loc = IntersectionLocationType.BEHIND;\n          return;\n        }\n\n        if (Math.sqrt(ax * ax + ay * ay) < Math.sqrt(bx * bx + by * by)) {\n          classifyResult.loc = IntersectionLocationType.BEYOND;\n          return;\n        }\n\n        var t;\n\n        if (ax !== 0) {\n          t = bx / ax;\n        } else {\n          t = by / ay;\n        }\n\n        classifyResult.loc = IntersectionLocationType.BETWEEN;\n        classifyResult.t = t;\n      }\n\n      function getIntersections(path1, path2) {\n        var intersectionsRaw = [];\n        var intersections = [];\n\n        for (var index = 1; index < path1.length; index++) {\n          var path1EdgeStart = path1[index - 1];\n          var path1EdgeEnd = path1[index];\n\n          var _loop = function _loop(index2) {\n            var path2EdgeStart = path2[index2 - 1];\n            var path2EdgeEnd = path2[index2];\n            var intersection = findEdgeIntersection(path1EdgeStart, path1EdgeEnd, path2EdgeStart, path2EdgeEnd);\n\n            if (intersection !== null && intersectionsRaw.find(function (i) {\n              return i.t <= intersection.t + Number.EPSILON && i.t >= intersection.t - Number.EPSILON;\n            }) === undefined) {\n              intersectionsRaw.push(intersection);\n              intersections.push(new Vector2(intersection.x, intersection.y));\n            }\n          };\n\n          for (var index2 = 1; index2 < path2.length; index2++) {\n            _loop(index2);\n          }\n        }\n\n        return intersections;\n      }\n\n      function getScanlineIntersections(scanline, boundingBox, paths) {\n        var center = new Vector2();\n        boundingBox.getCenter(center);\n        var allIntersections = [];\n        paths.forEach(function (path) {\n          // check if the center of the bounding box is in the bounding box of the paths.\n          // this is a pruning method to limit the search of intersections in paths that can't envelop of the current path.\n          // if a path envelops another path. The center of that oter path, has to be inside the bounding box of the enveloping path.\n          if (path.boundingBox.containsPoint(center)) {\n            var intersections = getIntersections(scanline, path.points);\n            intersections.forEach(function (p) {\n              allIntersections.push({\n                identifier: path.identifier,\n                isCW: path.isCW,\n                point: p\n              });\n            });\n          }\n        });\n        allIntersections.sort(function (i1, i2) {\n          return i1.point.x - i2.point.x;\n        });\n        return allIntersections;\n      }\n\n      function isHoleTo(simplePath, allPaths, scanlineMinX, scanlineMaxX, _fillRule) {\n        if (_fillRule === null || _fillRule === undefined || _fillRule === '') {\n          _fillRule = 'nonzero';\n        }\n\n        var centerBoundingBox = new Vector2();\n        simplePath.boundingBox.getCenter(centerBoundingBox);\n        var scanline = [new Vector2(scanlineMinX, centerBoundingBox.y), new Vector2(scanlineMaxX, centerBoundingBox.y)];\n        var scanlineIntersections = getScanlineIntersections(scanline, simplePath.boundingBox, allPaths);\n        scanlineIntersections.sort(function (i1, i2) {\n          return i1.point.x - i2.point.x;\n        });\n        var baseIntersections = [];\n        var otherIntersections = [];\n        scanlineIntersections.forEach(function (i) {\n          if (i.identifier === simplePath.identifier) {\n            baseIntersections.push(i);\n          } else {\n            otherIntersections.push(i);\n          }\n        });\n        var firstXOfPath = baseIntersections[0].point.x; // build up the path hierarchy\n\n        var stack = [];\n        var i = 0;\n\n        while (i < otherIntersections.length && otherIntersections[i].point.x < firstXOfPath) {\n          if (stack.length > 0 && stack[stack.length - 1] === otherIntersections[i].identifier) {\n            stack.pop();\n          } else {\n            stack.push(otherIntersections[i].identifier);\n          }\n\n          i++;\n        }\n\n        stack.push(simplePath.identifier);\n\n        if (_fillRule === 'evenodd') {\n          var isHole = stack.length % 2 === 0 ? true : false;\n          var isHoleFor = stack[stack.length - 2];\n          return {\n            identifier: simplePath.identifier,\n            isHole: isHole,\n            for: isHoleFor\n          };\n        } else if (_fillRule === 'nonzero') {\n          // check if path is a hole by counting the amount of paths with alternating rotations it has to cross.\n          var _isHole = true;\n          var _isHoleFor = null;\n          var lastCWValue = null;\n\n          for (var _i2 = 0; _i2 < stack.length; _i2++) {\n            var _identifier = stack[_i2];\n\n            if (_isHole) {\n              lastCWValue = allPaths[_identifier].isCW;\n              _isHole = false;\n              _isHoleFor = _identifier;\n            } else if (lastCWValue !== allPaths[_identifier].isCW) {\n              lastCWValue = allPaths[_identifier].isCW;\n              _isHole = true;\n            }\n          }\n\n          return {\n            identifier: simplePath.identifier,\n            isHole: _isHole,\n            for: _isHoleFor\n          };\n        } else {\n          console.warn('fill-rule: \"' + _fillRule + '\" is currently not implemented.');\n        }\n      } // check for self intersecting paths\n      // TODO\n      // check intersecting paths\n      // TODO\n      // prepare paths for hole detection\n\n\n      var identifier = 0;\n      var scanlineMinX = BIGNUMBER;\n      var scanlineMaxX = -BIGNUMBER;\n      var simplePaths = shapePath.subPaths.map(function (p) {\n        var points = p.getPoints();\n        var maxY = -BIGNUMBER;\n        var minY = BIGNUMBER;\n        var maxX = -BIGNUMBER;\n        var minX = BIGNUMBER; //points.forEach(p => p.y *= -1);\n\n        for (var i = 0; i < points.length; i++) {\n          var _p = points[i];\n\n          if (_p.y > maxY) {\n            maxY = _p.y;\n          }\n\n          if (_p.y < minY) {\n            minY = _p.y;\n          }\n\n          if (_p.x > maxX) {\n            maxX = _p.x;\n          }\n\n          if (_p.x < minX) {\n            minX = _p.x;\n          }\n        } //\n\n\n        if (scanlineMaxX <= maxX) {\n          scanlineMaxX = maxX + 1;\n        }\n\n        if (scanlineMinX >= minX) {\n          scanlineMinX = minX - 1;\n        }\n\n        return {\n          points: points,\n          isCW: ShapeUtils.isClockWise(points),\n          identifier: identifier++,\n          boundingBox: new Box2(new Vector2(minX, minY), new Vector2(maxX, maxY))\n        };\n      });\n      simplePaths = simplePaths.filter(function (sp) {\n        return sp.points.length > 0;\n      }); // check if path is solid or a hole\n\n      var isAHole = simplePaths.map(function (p) {\n        return isHoleTo(p, simplePaths, scanlineMinX, scanlineMaxX, shapePath.userData.style.fillRule);\n      });\n      var shapesToReturn = [];\n      simplePaths.forEach(function (p) {\n        var amIAHole = isAHole[p.identifier];\n\n        if (!amIAHole.isHole) {\n          var shape = new Shape(p.points);\n          var holes = isAHole.filter(function (h) {\n            return h.isHole && h.for === p.identifier;\n          });\n          holes.forEach(function (h) {\n            var path = simplePaths[h.identifier];\n            shape.holes.push(new Path(path.points));\n          });\n          shapesToReturn.push(shape);\n        }\n      });\n      return shapesToReturn;\n    }\n  }, {\n    key: \"getStrokeStyle\",\n    value: function getStrokeStyle(width, color, lineJoin, lineCap, miterLimit) {\n      // Param width: Stroke width\n      // Param color: As returned by THREE.Color.getStyle()\n      // Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n      // Param lineCap: One of \"round\", \"square\" or \"butt\"\n      // Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n      // Returns style object\n      width = width !== undefined ? width : 1;\n      color = color !== undefined ? color : '#000';\n      lineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n      lineCap = lineCap !== undefined ? lineCap : 'butt';\n      miterLimit = miterLimit !== undefined ? miterLimit : 4;\n      return {\n        strokeColor: color,\n        strokeWidth: width,\n        strokeLineJoin: lineJoin,\n        strokeLineCap: lineCap,\n        strokeMiterLimit: miterLimit\n      };\n    }\n  }, {\n    key: \"pointsToStroke\",\n    value: function pointsToStroke(points, style, arcDivisions, minDistance) {\n      // Generates a stroke with some witdh around the given path.\n      // The path can be open or closed (last point equals to first point)\n      // Param points: Array of Vector2D (the path). Minimum 2 points.\n      // Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n      // Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n      // Param minDistance: Points closer to this distance will be merged. (Optional)\n      // Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n      var vertices = [];\n      var normals = [];\n      var uvs = [];\n\n      if (SVGLoader.pointsToStrokeWithBuffers(points, style, arcDivisions, minDistance, vertices, normals, uvs) === 0) {\n        return null;\n      }\n\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n      geometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n      return geometry;\n    }\n  }, {\n    key: \"pointsToStrokeWithBuffers\",\n    value: function pointsToStrokeWithBuffers(points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset) {\n      // This function can be called to update existing arrays or buffers.\n      // Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n      // Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n      // Returns number of written vertices / normals / uvs pairs\n      // if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n      // 'normals' and 'uvs' buffers are optional\n      var tempV2_1 = new Vector2();\n      var tempV2_2 = new Vector2();\n      var tempV2_3 = new Vector2();\n      var tempV2_4 = new Vector2();\n      var tempV2_5 = new Vector2();\n      var tempV2_6 = new Vector2();\n      var tempV2_7 = new Vector2();\n      var lastPointL = new Vector2();\n      var lastPointR = new Vector2();\n      var point0L = new Vector2();\n      var point0R = new Vector2();\n      var currentPointL = new Vector2();\n      var currentPointR = new Vector2();\n      var nextPointL = new Vector2();\n      var nextPointR = new Vector2();\n      var innerPoint = new Vector2();\n      var outerPoint = new Vector2();\n      arcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n      minDistance = minDistance !== undefined ? minDistance : 0.001;\n      vertexOffset = vertexOffset !== undefined ? vertexOffset : 0; // First ensure there are no duplicated points\n\n      points = removeDuplicatedPoints(points);\n      var numPoints = points.length;\n      if (numPoints < 2) return 0;\n      var isClosed = points[0].equals(points[numPoints - 1]);\n      var currentPoint;\n      var previousPoint = points[0];\n      var nextPoint;\n      var strokeWidth2 = style.strokeWidth / 2;\n      var deltaU = 1 / (numPoints - 1);\n      var u0 = 0,\n          u1;\n      var innerSideModified;\n      var joinIsOnLeftSide;\n      var isMiter;\n      var initialJoinIsOnLeftSide = false;\n      var numVertices = 0;\n      var currentCoordinate = vertexOffset * 3;\n      var currentCoordinateUV = vertexOffset * 2; // Get initial left and right stroke points\n\n      getNormal(points[0], points[1], tempV2_1).multiplyScalar(strokeWidth2);\n      lastPointL.copy(points[0]).sub(tempV2_1);\n      lastPointR.copy(points[0]).add(tempV2_1);\n      point0L.copy(lastPointL);\n      point0R.copy(lastPointR);\n\n      for (var iPoint = 1; iPoint < numPoints; iPoint++) {\n        currentPoint = points[iPoint]; // Get next point\n\n        if (iPoint === numPoints - 1) {\n          if (isClosed) {\n            // Skip duplicated initial point\n            nextPoint = points[1];\n          } else nextPoint = undefined;\n        } else {\n          nextPoint = points[iPoint + 1];\n        } // Normal of previous segment in tempV2_1\n\n\n        var normal1 = tempV2_1;\n        getNormal(previousPoint, currentPoint, normal1);\n        tempV2_3.copy(normal1).multiplyScalar(strokeWidth2);\n        currentPointL.copy(currentPoint).sub(tempV2_3);\n        currentPointR.copy(currentPoint).add(tempV2_3);\n        u1 = u0 + deltaU;\n        innerSideModified = false;\n\n        if (nextPoint !== undefined) {\n          // Normal of next segment in tempV2_2\n          getNormal(currentPoint, nextPoint, tempV2_2);\n          tempV2_3.copy(tempV2_2).multiplyScalar(strokeWidth2);\n          nextPointL.copy(currentPoint).sub(tempV2_3);\n          nextPointR.copy(currentPoint).add(tempV2_3);\n          joinIsOnLeftSide = true;\n          tempV2_3.subVectors(nextPoint, previousPoint);\n\n          if (normal1.dot(tempV2_3) < 0) {\n            joinIsOnLeftSide = false;\n          }\n\n          if (iPoint === 1) initialJoinIsOnLeftSide = joinIsOnLeftSide;\n          tempV2_3.subVectors(nextPoint, currentPoint);\n          tempV2_3.normalize();\n          var dot = Math.abs(normal1.dot(tempV2_3)); // If path is straight, don't create join\n\n          if (dot !== 0) {\n            // Compute inner and outer segment intersections\n            var miterSide = strokeWidth2 / dot;\n            tempV2_3.multiplyScalar(-miterSide);\n            tempV2_4.subVectors(currentPoint, previousPoint);\n            tempV2_5.copy(tempV2_4).setLength(miterSide).add(tempV2_3);\n            innerPoint.copy(tempV2_5).negate();\n            var miterLength2 = tempV2_5.length();\n            var segmentLengthPrev = tempV2_4.length();\n            tempV2_4.divideScalar(segmentLengthPrev);\n            tempV2_6.subVectors(nextPoint, currentPoint);\n            var segmentLengthNext = tempV2_6.length();\n            tempV2_6.divideScalar(segmentLengthNext); // Check that previous and next segments doesn't overlap with the innerPoint of intersection\n\n            if (tempV2_4.dot(innerPoint) < segmentLengthPrev && tempV2_6.dot(innerPoint) < segmentLengthNext) {\n              innerSideModified = true;\n            }\n\n            outerPoint.copy(tempV2_5).add(currentPoint);\n            innerPoint.add(currentPoint);\n            isMiter = false;\n\n            if (innerSideModified) {\n              if (joinIsOnLeftSide) {\n                nextPointR.copy(innerPoint);\n                currentPointR.copy(innerPoint);\n              } else {\n                nextPointL.copy(innerPoint);\n                currentPointL.copy(innerPoint);\n              }\n            } else {\n              // The segment triangles are generated here if there was overlapping\n              makeSegmentTriangles();\n            }\n\n            switch (style.strokeLineJoin) {\n              case 'bevel':\n                makeSegmentWithBevelJoin(joinIsOnLeftSide, innerSideModified, u1);\n                break;\n\n              case 'round':\n                // Segment triangles\n                createSegmentTrianglesWithMiddleSection(joinIsOnLeftSide, innerSideModified); // Join triangles\n\n                if (joinIsOnLeftSide) {\n                  makeCircularSector(currentPoint, currentPointL, nextPointL, u1, 0);\n                } else {\n                  makeCircularSector(currentPoint, nextPointR, currentPointR, u1, 1);\n                }\n\n                break;\n\n              case 'miter':\n              case 'miter-clip':\n              default:\n                var miterFraction = strokeWidth2 * style.strokeMiterLimit / miterLength2;\n\n                if (miterFraction < 1) {\n                  // The join miter length exceeds the miter limit\n                  if (style.strokeLineJoin !== 'miter-clip') {\n                    makeSegmentWithBevelJoin(joinIsOnLeftSide, innerSideModified, u1);\n                    break;\n                  } else {\n                    // Segment triangles\n                    createSegmentTrianglesWithMiddleSection(joinIsOnLeftSide, innerSideModified); // Miter-clip join triangles\n\n                    if (joinIsOnLeftSide) {\n                      tempV2_6.subVectors(outerPoint, currentPointL).multiplyScalar(miterFraction).add(currentPointL);\n                      tempV2_7.subVectors(outerPoint, nextPointL).multiplyScalar(miterFraction).add(nextPointL);\n                      addVertex(currentPointL, u1, 0);\n                      addVertex(tempV2_6, u1, 0);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(tempV2_6, u1, 0);\n                      addVertex(tempV2_7, u1, 0);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(tempV2_7, u1, 0);\n                      addVertex(nextPointL, u1, 0);\n                    } else {\n                      tempV2_6.subVectors(outerPoint, currentPointR).multiplyScalar(miterFraction).add(currentPointR);\n                      tempV2_7.subVectors(outerPoint, nextPointR).multiplyScalar(miterFraction).add(nextPointR);\n                      addVertex(currentPointR, u1, 1);\n                      addVertex(tempV2_6, u1, 1);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(tempV2_6, u1, 1);\n                      addVertex(tempV2_7, u1, 1);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(tempV2_7, u1, 1);\n                      addVertex(nextPointR, u1, 1);\n                    }\n                  }\n                } else {\n                  // Miter join segment triangles\n                  if (innerSideModified) {\n                    // Optimized segment + join triangles\n                    if (joinIsOnLeftSide) {\n                      addVertex(lastPointR, u0, 1);\n                      addVertex(lastPointL, u0, 0);\n                      addVertex(outerPoint, u1, 0);\n                      addVertex(lastPointR, u0, 1);\n                      addVertex(outerPoint, u1, 0);\n                      addVertex(innerPoint, u1, 1);\n                    } else {\n                      addVertex(lastPointR, u0, 1);\n                      addVertex(lastPointL, u0, 0);\n                      addVertex(outerPoint, u1, 1);\n                      addVertex(lastPointL, u0, 0);\n                      addVertex(innerPoint, u1, 0);\n                      addVertex(outerPoint, u1, 1);\n                    }\n\n                    if (joinIsOnLeftSide) {\n                      nextPointL.copy(outerPoint);\n                    } else {\n                      nextPointR.copy(outerPoint);\n                    }\n                  } else {\n                    // Add extra miter join triangles\n                    if (joinIsOnLeftSide) {\n                      addVertex(currentPointL, u1, 0);\n                      addVertex(outerPoint, u1, 0);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(outerPoint, u1, 0);\n                      addVertex(nextPointL, u1, 0);\n                    } else {\n                      addVertex(currentPointR, u1, 1);\n                      addVertex(outerPoint, u1, 1);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(currentPoint, u1, 0.5);\n                      addVertex(outerPoint, u1, 1);\n                      addVertex(nextPointR, u1, 1);\n                    }\n                  }\n\n                  isMiter = true;\n                }\n\n                break;\n            }\n          } else {\n            // The segment triangles are generated here when two consecutive points are collinear\n            makeSegmentTriangles();\n          }\n        } else {\n          // The segment triangles are generated here if it is the ending segment\n          makeSegmentTriangles();\n        }\n\n        if (!isClosed && iPoint === numPoints - 1) {\n          // Start line endcap\n          addCapGeometry(points[0], point0L, point0R, joinIsOnLeftSide, true, u0);\n        } // Increment loop variables\n\n\n        u0 = u1;\n        previousPoint = currentPoint;\n        lastPointL.copy(nextPointL);\n        lastPointR.copy(nextPointR);\n      }\n\n      if (!isClosed) {\n        // Ending line endcap\n        addCapGeometry(currentPoint, currentPointL, currentPointR, joinIsOnLeftSide, false, u1);\n      } else if (innerSideModified && vertices) {\n        // Modify path first segment vertices to adjust to the segments inner and outer intersections\n        var lastOuter = outerPoint;\n        var lastInner = innerPoint;\n\n        if (initialJoinIsOnLeftSide !== joinIsOnLeftSide) {\n          lastOuter = innerPoint;\n          lastInner = outerPoint;\n        }\n\n        if (joinIsOnLeftSide) {\n          if (isMiter || initialJoinIsOnLeftSide) {\n            lastInner.toArray(vertices, 0 * 3);\n            lastInner.toArray(vertices, 3 * 3);\n\n            if (isMiter) {\n              lastOuter.toArray(vertices, 1 * 3);\n            }\n          }\n        } else {\n          if (isMiter || !initialJoinIsOnLeftSide) {\n            lastInner.toArray(vertices, 1 * 3);\n            lastInner.toArray(vertices, 3 * 3);\n\n            if (isMiter) {\n              lastOuter.toArray(vertices, 0 * 3);\n            }\n          }\n        }\n      }\n\n      return numVertices; // -- End of algorithm\n      // -- Functions\n\n      function getNormal(p1, p2, result) {\n        result.subVectors(p2, p1);\n        return result.set(-result.y, result.x).normalize();\n      }\n\n      function addVertex(position, u, v) {\n        if (vertices) {\n          vertices[currentCoordinate] = position.x;\n          vertices[currentCoordinate + 1] = position.y;\n          vertices[currentCoordinate + 2] = 0;\n\n          if (normals) {\n            normals[currentCoordinate] = 0;\n            normals[currentCoordinate + 1] = 0;\n            normals[currentCoordinate + 2] = 1;\n          }\n\n          currentCoordinate += 3;\n\n          if (uvs) {\n            uvs[currentCoordinateUV] = u;\n            uvs[currentCoordinateUV + 1] = v;\n            currentCoordinateUV += 2;\n          }\n        }\n\n        numVertices += 3;\n      }\n\n      function makeCircularSector(center, p1, p2, u, v) {\n        // param p1, p2: Points in the circle arc.\n        // p1 and p2 are in clockwise direction.\n        tempV2_1.copy(p1).sub(center).normalize();\n        tempV2_2.copy(p2).sub(center).normalize();\n        var angle = Math.PI;\n        var dot = tempV2_1.dot(tempV2_2);\n        if (Math.abs(dot) < 1) angle = Math.abs(Math.acos(dot));\n        angle /= arcDivisions;\n        tempV2_3.copy(p1);\n\n        for (var i = 0, il = arcDivisions - 1; i < il; i++) {\n          tempV2_4.copy(tempV2_3).rotateAround(center, angle);\n          addVertex(tempV2_3, u, v);\n          addVertex(tempV2_4, u, v);\n          addVertex(center, u, 0.5);\n          tempV2_3.copy(tempV2_4);\n        }\n\n        addVertex(tempV2_4, u, v);\n        addVertex(p2, u, v);\n        addVertex(center, u, 0.5);\n      }\n\n      function makeSegmentTriangles() {\n        addVertex(lastPointR, u0, 1);\n        addVertex(lastPointL, u0, 0);\n        addVertex(currentPointL, u1, 0);\n        addVertex(lastPointR, u0, 1);\n        addVertex(currentPointL, u1, 1);\n        addVertex(currentPointR, u1, 0);\n      }\n\n      function makeSegmentWithBevelJoin(joinIsOnLeftSide, innerSideModified, u) {\n        if (innerSideModified) {\n          // Optimized segment + bevel triangles\n          if (joinIsOnLeftSide) {\n            // Path segments triangles\n            addVertex(lastPointR, u0, 1);\n            addVertex(lastPointL, u0, 0);\n            addVertex(currentPointL, u1, 0);\n            addVertex(lastPointR, u0, 1);\n            addVertex(currentPointL, u1, 0);\n            addVertex(innerPoint, u1, 1); // Bevel join triangle\n\n            addVertex(currentPointL, u, 0);\n            addVertex(nextPointL, u, 0);\n            addVertex(innerPoint, u, 0.5);\n          } else {\n            // Path segments triangles\n            addVertex(lastPointR, u0, 1);\n            addVertex(lastPointL, u0, 0);\n            addVertex(currentPointR, u1, 1);\n            addVertex(lastPointL, u0, 0);\n            addVertex(innerPoint, u1, 0);\n            addVertex(currentPointR, u1, 1); // Bevel join triangle\n\n            addVertex(currentPointR, u, 1);\n            addVertex(nextPointR, u, 0);\n            addVertex(innerPoint, u, 0.5);\n          }\n        } else {\n          // Bevel join triangle. The segment triangles are done in the main loop\n          if (joinIsOnLeftSide) {\n            addVertex(currentPointL, u, 0);\n            addVertex(nextPointL, u, 0);\n            addVertex(currentPoint, u, 0.5);\n          } else {\n            addVertex(currentPointR, u, 1);\n            addVertex(nextPointR, u, 0);\n            addVertex(currentPoint, u, 0.5);\n          }\n        }\n      }\n\n      function createSegmentTrianglesWithMiddleSection(joinIsOnLeftSide, innerSideModified) {\n        if (innerSideModified) {\n          if (joinIsOnLeftSide) {\n            addVertex(lastPointR, u0, 1);\n            addVertex(lastPointL, u0, 0);\n            addVertex(currentPointL, u1, 0);\n            addVertex(lastPointR, u0, 1);\n            addVertex(currentPointL, u1, 0);\n            addVertex(innerPoint, u1, 1);\n            addVertex(currentPointL, u0, 0);\n            addVertex(currentPoint, u1, 0.5);\n            addVertex(innerPoint, u1, 1);\n            addVertex(currentPoint, u1, 0.5);\n            addVertex(nextPointL, u0, 0);\n            addVertex(innerPoint, u1, 1);\n          } else {\n            addVertex(lastPointR, u0, 1);\n            addVertex(lastPointL, u0, 0);\n            addVertex(currentPointR, u1, 1);\n            addVertex(lastPointL, u0, 0);\n            addVertex(innerPoint, u1, 0);\n            addVertex(currentPointR, u1, 1);\n            addVertex(currentPointR, u0, 1);\n            addVertex(innerPoint, u1, 0);\n            addVertex(currentPoint, u1, 0.5);\n            addVertex(currentPoint, u1, 0.5);\n            addVertex(innerPoint, u1, 0);\n            addVertex(nextPointR, u0, 1);\n          }\n        }\n      }\n\n      function addCapGeometry(center, p1, p2, joinIsOnLeftSide, start, u) {\n        // param center: End point of the path\n        // param p1, p2: Left and right cap points\n        switch (style.strokeLineCap) {\n          case 'round':\n            if (start) {\n              makeCircularSector(center, p2, p1, u, 0.5);\n            } else {\n              makeCircularSector(center, p1, p2, u, 0.5);\n            }\n\n            break;\n\n          case 'square':\n            if (start) {\n              tempV2_1.subVectors(p1, center);\n              tempV2_2.set(tempV2_1.y, -tempV2_1.x);\n              tempV2_3.addVectors(tempV2_1, tempV2_2).add(center);\n              tempV2_4.subVectors(tempV2_2, tempV2_1).add(center); // Modify already existing vertices\n\n              if (joinIsOnLeftSide) {\n                tempV2_3.toArray(vertices, 1 * 3);\n                tempV2_4.toArray(vertices, 0 * 3);\n                tempV2_4.toArray(vertices, 3 * 3);\n              } else {\n                tempV2_3.toArray(vertices, 1 * 3);\n                tempV2_3.toArray(vertices, 3 * 3);\n                tempV2_4.toArray(vertices, 0 * 3);\n              }\n            } else {\n              tempV2_1.subVectors(p2, center);\n              tempV2_2.set(tempV2_1.y, -tempV2_1.x);\n              tempV2_3.addVectors(tempV2_1, tempV2_2).add(center);\n              tempV2_4.subVectors(tempV2_2, tempV2_1).add(center);\n              var vl = vertices.length; // Modify already existing vertices\n\n              if (joinIsOnLeftSide) {\n                tempV2_3.toArray(vertices, vl - 1 * 3);\n                tempV2_4.toArray(vertices, vl - 2 * 3);\n                tempV2_4.toArray(vertices, vl - 4 * 3);\n              } else {\n                tempV2_3.toArray(vertices, vl - 2 * 3);\n                tempV2_4.toArray(vertices, vl - 1 * 3);\n                tempV2_4.toArray(vertices, vl - 4 * 3);\n              }\n            }\n\n            break;\n\n          case 'butt':\n          default:\n            // Nothing to do here\n            break;\n        }\n      }\n\n      function removeDuplicatedPoints(points) {\n        // Creates a new array if necessary with duplicated points removed.\n        // This does not remove duplicated initial and ending points of a closed path.\n        var dupPoints = false;\n\n        for (var i = 1, n = points.length - 1; i < n; i++) {\n          if (points[i].distanceTo(points[i + 1]) < minDistance) {\n            dupPoints = true;\n            break;\n          }\n        }\n\n        if (!dupPoints) return points;\n        var newPoints = [];\n        newPoints.push(points[0]);\n\n        for (var _i3 = 1, _n = points.length - 1; _i3 < _n; _i3++) {\n          if (points[_i3].distanceTo(points[_i3 + 1]) >= minDistance) {\n            newPoints.push(points[_i3]);\n          }\n        }\n\n        newPoints.push(points[points.length - 1]);\n        return newPoints;\n      }\n    }\n  }]);\n\n  return SVGLoader;\n}(Loader);\n\nexport { SVGLoader };","import { Color } from 'three/build/three.module.js';\n/**\n * Colorify shader\n */\n\nvar ColorifyShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    color1: {\n      value: new Color(0xffffff)\n    },\n    color2: {\n      value: new Color(0xff7701)\n    },\n    amount: {\n      value: 0.03\n    }\n  },\n  vertexShader:\n  /* glsl */\n  \"\\n\\t\\tvarying vec2 vUv;\\n\\t\\tvoid main() {\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\t\\t}\",\n  fragmentShader:\n  /* glsl */\n  \"\\n\\t\\tuniform vec3 color1;\\n        uniform vec3 color2;\\n\\t\\tuniform sampler2D tDiffuse;\\n        uniform float amount;\\n        \\n\\t\\tvarying vec2 vUv;\\n\\t\\tvoid main() {\\n\\t\\t\\tvec4 texel = texture2D( tDiffuse, vUv );\\n            vec4 gradient = mix(vec4(color1, 1), vec4(color2, 1), vUv.y);\\n            vec4 finalColor = mix(texel, texel*gradient, amount);\\n            gl_FragColor = finalColor;\\n\\t\\t}\"\n};\nexport { ColorifyShader };","var __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { AmbientLight, Scene, Color, Vector2, PerspectiveCamera, PlaneGeometry, WebGLRenderer, PMREMGenerator, DirectionalLight, DefaultLoadingManager, sRGBEncoding, EquirectangularReflectionMapping, ACESFilmicToneMapping, Fog, CatmullRomCurve3, Vector3, WireframeGeometry, LineBasicMaterial, LineSegments, TubeGeometry, Mesh, MeshPhongMaterial, TextureLoader, Uniform } from 'three/build/three.module';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { ColorifyShader } from '../../../utils/threejs/ColorifyShaderMod';\nimport disposeObjects from '../../../utils/dispose-objects';\n\nfunction Art() {\n  var inputEl = useRef(null);\n  useEffect(function () {\n    return function () {\n      require('../../../utils/dispose-objects');\n\n      disposeObjects(inputEl.renderer, inputEl);\n    };\n  }, []);\n  useEffect(function () {\n    var scene = new Scene();\n    var camera = new PerspectiveCamera(100, inputEl.current.offsetWidth / inputEl.current.offsetHeight, 0.1, 2000);\n    var renderer = new WebGLRenderer();\n    var controls = new OrbitControls(camera, renderer.domElement);\n    var pmremGenerator = new PMREMGenerator(renderer);\n    var directionalLight = new DirectionalLight(0xff00ff, 0.5);\n    var mouse = new Vector2();\n    var material = new MeshPhongMaterial({\n      color: 0xcf70c9,\n      wireframe: false\n    });\n    var v3 = [];\n    var counter = 0;\n    var v3Size = 0;\n    var tubeGeo;\n    var start = false;\n    var curve;\n    var mesh;\n    var bloomPass;\n    var filmPass;\n    var renderScene;\n    var composer;\n    var finished = false;\n    var envTexture;\n    var colorifier;\n\n    function onMouseClick(event) {\n      console.log(camera.position);\n      if (!finished) start = !start;\n      if (finished) finished = false;\n    }\n\n    function onWindowResize(event) {\n      camera.aspect = inputEl.current.offsetWidth / inputEl.current.offsetHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(inputEl.current.offsetWidth, inputEl.current.offsetHeight);\n      composer.setSize(inputEl.current.offsetWidth, inputEl.current.offsetHeight);\n    }\n\n    function onPointerMove(event) {\n      mouse.x = event.clientX / inputEl.current.offsetWidth * 2.5 - 1;\n      mouse.y = -(event.clientY / inputEl.current.offsetHeight) * 2.5 + 1;\n    }\n\n    function setupRenderer() {\n      renderer.setPixelRatio(inputEl.current.offsetWidth / inputEl.current.offsetHeight);\n      renderer.setSize(inputEl.current.offsetWidth, inputEl.current.offsetHeight);\n      inputEl.current.append(renderer.domElement);\n      inputEl.current.addEventListener('mousemove', onPointerMove);\n      inputEl.current.addEventListener('resize', onWindowResize);\n      inputEl.current.addEventListener('click', onMouseClick);\n\n      DefaultLoadingManager.onLoad = function () {\n        pmremGenerator.dispose();\n      };\n\n      pmremGenerator.compileEquirectangularShader();\n      renderer.outputEncoding = sRGBEncoding;\n      renderer.toneMapping = ACESFilmicToneMapping;\n      renderer.toneMappingExposure = 1.0;\n    }\n\n    function createPlane() {\n      var geometry = new PlaneGeometry(1000, 1000, 10, 10);\n      var geo = new WireframeGeometry(geometry);\n      var material = new LineBasicMaterial({\n        color: 0x9c08ff\n      });\n      var wireframe = new LineSegments(geo, material);\n      wireframe.computeLineDistances();\n      wireframe.visible = true;\n      wireframe.rotateX(Math.PI / 2);\n      wireframe.position.y -= 100;\n      scene.add(wireframe);\n    }\n\n    function setupCamera() {\n      controls.autoRotate = true;\n      camera.position.x = 50;\n      camera.position.y = 25;\n      camera.position.z = -50;\n      camera.updateProjectionMatrix();\n      controls.update();\n    }\n\n    function loadImage(url) {\n      var loader = new SVGLoader();\n      loader.load(url, function (svgData) {\n        var subPath = svgData.paths[0].subPaths[0];\n        var v2 = subPath.getPoints();\n\n        for (var z = 0; z < v2.length; z++) {\n          v3.push(new Vector3(v2[z].x, -v2[z].y, z * 0.02));\n        }\n\n        curve = new CatmullRomCurve3(v3);\n        tubeGeo = new TubeGeometry(curve, v3.length, 0.5, 8, false);\n        v3Size = v3.length * (curve.arcLengthDivisions / 4);\n        tubeGeo.computeBoundingBox();\n        tubeGeo.center();\n      });\n    }\n\n    function setupScene() {\n      var loadEnv = new TextureLoader();\n      material.emissive.setHex(0xcfffc9);\n      material.emissiveIntensity = 0.5;\n      envTexture = loadEnv.load('../../assets/textures/eso0932a.jpeg');\n      envTexture.mapping = EquirectangularReflectionMapping;\n      envTexture.encoding = sRGBEncoding;\n      scene.background = envTexture;\n      scene.fog = new Fog(0x570057, 100, 350);\n      scene.add(new AmbientLight(0xf0e9e9));\n      directionalLight.position.set(0, -1, 0);\n      scene.add(directionalLight);\n    }\n\n    function setupPostProcessingEffects() {\n      colorifier = new ShaderPass(ColorifyShader);\n      colorifier.uniforms['color1'] = new Uniform(new Color(255, 115, 0));\n      colorifier.uniforms['color2'] = new Uniform(new Color(0, 115, 255));\n      renderScene = new RenderPass(scene, camera);\n      bloomPass = new UnrealBloomPass(new Vector2(inputEl.current.offsetWidth, inputEl.current.offsetHeight), 1.5, //strength\n      0.1, //radius\n      0.8 //threshold\n      );\n      filmPass = new FilmPass(0.5, 0.8, 500, false);\n      composer = new EffectComposer(renderer);\n      composer.addPass(renderScene);\n      composer.addPass(filmPass);\n      composer.addPass(colorifier);\n      composer.addPass(bloomPass);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n      controls.update();\n      composer.render();\n    }\n\n    function render() {\n      if (start) {\n        counter += 50;\n        tubeGeo.setDrawRange(0, counter);\n\n        if (mesh !== undefined) {\n          scene.remove(mesh);\n          mesh.geometry.dispose();\n        }\n\n        mesh = new Mesh(tubeGeo, material);\n        scene.add(mesh);\n        camera.lookAt(mesh.position);\n\n        if (counter >= v3Size) {\n          start = false;\n          counter = 0;\n          console.log('finish');\n          finished = true;\n          controls.autoRotateSpeed = 0.8;\n        }\n      }\n\n      if (finished) {\n        if (camera.position.z < 250) {\n          camera.position.z += 0.4;\n        }\n\n        if (controls.object.position.x < 0.4 && controls.object.position.x > 0.1 && controls.object.position.z > 0) {\n          controls.autoRotate = false;\n        }\n\n        camera.position.x += (mouse.x - camera.position.x) * 1.5; //camera.position.y += (-mouse.y - camera.position.y) * 1.5;\n      }\n\n      renderer.render(scene, camera);\n    }\n\n    function init() {\n      setupRenderer();\n      setupCamera();\n      setupScene();\n      createPlane();\n      loadImage('../../assets/images/svg/lines2.svg');\n      setupPostProcessingEffects();\n    }\n\n    init();\n    animate();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    ref: inputEl\n  }));\n}\n\nexport default Art;"],"sourceRoot":""}