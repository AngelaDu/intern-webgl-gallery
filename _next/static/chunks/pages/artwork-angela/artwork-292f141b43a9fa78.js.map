{"version":3,"file":"static/chunks/pages/artwork-angela/artwork-292f141b43a9fa78.js","mappings":"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","sources":["webpack://_N_E/?819d","webpack://_N_E/./src/data/settings.ts","webpack://_N_E/./src/pages/artwork-angela/artwork.js","webpack://_N_E/./src/utils/dispose-objects.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/artwork-angela/artwork\",\n      function () {\n        return require(\"private-next-pages/artwork-angela/artwork.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/artwork-angela/artwork\"])\n      });\n    }\n  ","// global\nexport const resizeDebounceTime = 10; // in ms\n\n// head\nexport const siteName = 'Jam3 Generator';\nexport const siteSlogan = 'The Relentless Pursuit of Better';\nexport const baseUrl = process.env.NEXT_PUBLIC_URL || '';\n","import { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport disposeObjects from '../../utils/dispose-objects';\nimport { baseUrl } from '../../data/settings';\n\nexport default function Artwork() {\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      disposeObjects(inputEl.renderer, inputEl);\n    };\n  }, []);\n\n  useEffect(() => {\n    const path_start = `${baseUrl}/assets/angela-assets`;\n    // SCENE\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color('rgb(0,0,0)'); // sky\n\n    const radius = 100000;\n\n    // CAMERA\n    const camera = new THREE.PerspectiveCamera(\n      90, // fov\n      window.innerWidth / window.innerHeight, // aspect ratio\n      1, // near\n      radius * 2 // far\n    );\n\n    // MUSIC\n    // create an AudioListener and add it to the camera\n    const listener = new THREE.AudioListener();\n    camera.add(listener);\n    // create a global audio source\n    const sound = new THREE.Audio(listener);\n    sound.autoplay = true;\n    // load a sound and set it as the Audio object's buffer\n    const audioLoader = new THREE.AudioLoader();\n    audioLoader.autoplay = true;\n    audioLoader.load(`${path_start}/others/beach_vibe.mp3`, function (buffer) {\n      sound.setBuffer(buffer);\n      sound.setLoop(true);\n      sound.setVolume(0.15);\n      sound.play();\n    });\n    console.log('IS PLAYING:', sound.isPlaying);\n\n    // RENDERER\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.shadowMap.enabled = true;\n\n    // ORBIT\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.target = new THREE.Vector3(0, 1500, -300); // centre on x,y\n    controls.maxDistance = 15000;\n    controls.maxPolarAngle = Math.PI / 2;\n    controls.update();\n\n    // AMBIENT LIGHT\n    scene.add(new THREE.AmbientLight(0xffffffff, 0.5));\n    // DIRECTIONAL LIGHT\n    const dirLight = new THREE.DirectionalLight(0xffffffff, 1.0);\n    //0, 300, -3800\n    dirLight.position.x += 0;\n    dirLight.position.y += 100;\n    dirLight.position.z -= -3800;\n    dirLight.castShadow = true;\n    dirLight.shadow.mapSize.width = radius;\n    dirLight.shadow.mapSize.height = radius;\n    const d = 500;\n    dirLight.shadow.camera.left = -d;\n    dirLight.shadow.camera.right = d;\n    dirLight.shadow.camera.top = d;\n    dirLight.shadow.camera.bottom = -d;\n    dirLight.position.z = -33;\n\n    let target = new THREE.Object3D();\n    target.position.z = -20;\n    dirLight.target = target;\n    dirLight.target.updateMatrixWorld();\n\n    dirLight.shadow.camera.lookAt(0, 0, -30);\n    scene.add(dirLight);\n    // scene.add(new THREE.CameraHelper(dirLight.shadow.camera));\n\n    // TEXTURES WATER\n    const textureLoader = new THREE.TextureLoader();\n    const waterBaseColor = textureLoader.load(`${path_start}/water/Water_002_COLOR.jpg`);\n    const waterNormalMap = textureLoader.load(`${path_start}/water/Water_002_NORM.jpg`);\n    const waterHeightMap = textureLoader.load(`${path_start}/water/Water_002_DISP.jpg`);\n    const waterRoughness = textureLoader.load(`${path_start}/water/Water_002_ROUGH.jpg`);\n    const waterAmbientOcclusion = textureLoader.load(`${path_start}/water/Water_002_OCC.jpg`);\n\n    // FOG;\n    const fogColour = new THREE.Color('rgb(195, 218, 235)');\n    scene.fog = new THREE.Fog(fogColour, 400, radius + 500);\n\n    // SKY\n    const skyTexture = textureLoader.load(`${path_start}/others/cur.jpg`);\n    const mySky = new THREE.SphereGeometry(radius, 32, 16);\n    const material = new THREE.MeshBasicMaterial({ map: skyTexture, fog: false });\n    material.side = THREE.BackSide; // put mech on inside\n    const sphere = new THREE.Mesh(mySky, material);\n    sphere.setRotationFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.PI / 2.45);\n    scene.add(sphere);\n\n    const geometry = new THREE.CircleBufferGeometry(radius, 200);\n\n    const waterMesh = new THREE.MeshStandardMaterial({\n      map: waterBaseColor,\n      normalMap: waterNormalMap,\n      displacementMap: waterHeightMap,\n      displacementScale: 1,\n      roughnessMap: waterRoughness,\n      roughness: 0,\n      aoMap: waterAmbientOcclusion\n    });\n    const plane = new THREE.Mesh(geometry, waterMesh);\n    plane.receiveShadow = true;\n    plane.castShadow = true;\n    plane.rotation.x = -Math.PI / 2;\n\n    // TRANSPARENCY\n    plane.material.transparent = true;\n    plane.material.opacity = 0.5;\n    scene.add(plane);\n\n    const count = geometry.attributes.position.count;\n    const damping = 2.5; // controls waviness\n    // ANIMATE\n    function animate() {\n      // SINE WAVE\n      const now_slow = Date.now() / 300; // controls speed\n      for (let i = 0; i < count; i++) {\n        const x = geometry.attributes.position.getX(i);\n        const y = geometry.attributes.position.getY(i);\n        const xangle = x + now_slow;\n        const xsin = Math.sin(xangle) * damping;\n        const yangle = y + now_slow;\n        const ycos = Math.cos(yangle) * damping;\n        geometry.attributes.position.setZ(i, xsin + ycos);\n      }\n      geometry.computeVertexNormals();\n      geometry.attributes.position.needsUpdate = true;\n\n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    }\n    // document.body.appendChild(renderer.domElement);\n    inputEl.current.append(renderer.domElement);\n    animate();\n\n    // RESIZE HANDLER\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener('resize', onWindowResize);\n  }, []);\n\n  return <div ref={inputEl}></div>;\n}\n","/**\n * Recursively dispose threejs objects\n *\n * @export\n * @param {Object3D} object\n * @param {(Scene | Object3D)} parent\n * @returns\n */\nexport default function disposeObjects(object, parent) {\n  if (object === null || object === undefined) return;\n  if (parent) parent.remove(object);\n  if (object.dispose) {\n    object.dispose();\n  }\n  if (object.geometry) {\n    object.geometry.dispose();\n  }\n  if (object.material) {\n    object.material.dispose();\n  }\n  if (object.children) {\n    let i = 0;\n    const l = object.children.length;\n    while (i < l) {\n      disposeObjects(object.children[0], object);\n      i++;\n    }\n  }\n  if (object.type === 'Scene') object.dispose();\n  object = null;\n  console.log('disposing');\n}\n"],"names":["window","__NEXT_P","push","siteName","siteSlogan","baseUrl","process","Artwork","inputEl","useRef","useEffect","disposeObjects","renderer","path_start","scene","THREE","background","radius","camera","innerWidth","innerHeight","listener","add","sound","autoplay","audioLoader","load","buffer","setBuffer","setLoop","setVolume","play","console","log","isPlaying","antialias","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","controls","OrbitControls","domElement","target","maxDistance","maxPolarAngle","Math","PI","update","dirLight","position","x","y","z","castShadow","shadow","mapSize","width","height","d","left","right","top","bottom","updateMatrixWorld","lookAt","textureLoader","waterBaseColor","waterNormalMap","waterHeightMap","waterRoughness","waterAmbientOcclusion","fogColour","fog","skyTexture","mySky","material","map","side","sphere","setRotationFromAxisAngle","geometry","waterMesh","normalMap","displacementMap","displacementScale","roughnessMap","roughness","aoMap","plane","receiveShadow","rotation","transparent","opacity","count","attributes","current","append","animate","now_slow","Date","now","i","getX","getY","xangle","xsin","sin","yangle","ycos","cos","setZ","computeVertexNormals","needsUpdate","render","requestAnimationFrame","addEventListener","aspect","updateProjectionMatrix","div","ref","object","parent","undefined","remove","dispose","children","l","length","type"],"sourceRoot":""}