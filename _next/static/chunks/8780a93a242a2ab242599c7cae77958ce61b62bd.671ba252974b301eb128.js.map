{"version":3,"sources":["webpack://_N_E/./src/utils/dispose-objects.js","webpack://_N_E/./node_modules/three/examples/jsm/controls/OrbitControls.js"],"names":["disposeObjects","object","parent","undefined","remove","dispose","geometry","material","children","i","l","length","type","console","log","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","_changeEvent","_startEvent","_endEvent","OrbitControls","_EventDispatcher","_super","domElement","_this","warn","document","error","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","handleMouseWheel","needsUpdate","code","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","passive"],"mappings":"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","file":"static/chunks/8780a93a242a2ab242599c7cae77958ce61b62bd.671ba252974b301eb128.js","sourcesContent":["/**\n * Recursively dispose threejs objects\n *\n * @export\n * @param {Object3D} object\n * @param {(Scene | Object3D)} parent\n * @returns\n */\nexport default function disposeObjects(object, parent) {\n  if (object === null || object === undefined) return;\n  if (parent) parent.remove(object);\n\n  if (object.dispose) {\n    object.dispose();\n  }\n\n  if (object.geometry) {\n    object.geometry.dispose();\n  }\n\n  if (object.material) {\n    object.material.dispose();\n  }\n\n  if (object.children) {\n    var i = 0;\n    var l = object.children.length;\n\n    while (i < l) {\n      disposeObjects(object.children[0], object);\n      i++;\n    }\n  }\n\n  if (object.type === 'Scene') object.dispose();\n  object = null;\n  console.log('test');\n}","import _classCallCheck from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mariana/GitHub/intern-we3-webgl-gallery/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from 'three'; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar _changeEvent = {\n  type: 'change'\n};\nvar _startEvent = {\n  type: 'start'\n};\nvar _endEvent = {\n  type: 'end'\n};\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n    if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    _this.object = object;\n    _this.domElement = domElement; // Set to false to disable this control\n\n    _this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    _this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    _this.minPolarAngle = 0; // radians\n\n    _this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    _this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    _this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    }; // Touch fingers\n\n    _this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    }; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom; // the target DOM element for key events\n\n    _this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new Vector3(); // so camera.up is the orbit axis\n\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    _this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('touchstart', onTouchStart);\n      scope.domElement.removeEventListener('touchend', onTouchEnd);\n      scope.domElement.removeEventListener('touchmove', onTouchMove);\n      scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseUp()\n    /*event*/\n    {// no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly(event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function handleTouchEnd()\n    /*event*/\n    {// no-op\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onMouseDown(event) {\n      // Prevent the browser from scrolling.\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      scope.domElement.focus ? scope.domElement.focus() : window.focus();\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove);\n        scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp(event) {\n      scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      handleMouseUp(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      if (scope.enabled === false) return;\n      handleTouchEnd(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    });\n    scope.domElement.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    scope.domElement.addEventListener('touchend', onTouchEnd);\n    scope.domElement.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    }); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return OrbitControls;\n}(EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  var _super2 = _createSuper(MapControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = MOUSE.ROTATE;\n    _this2.touches.ONE = TOUCH.PAN;\n    _this2.touches.TWO = TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return MapControls;\n}(OrbitControls);\n\nexport { OrbitControls, MapControls };"],"sourceRoot":""}